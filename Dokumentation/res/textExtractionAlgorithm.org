#+OPTIONS: ^:nil
* for file in files:
_class_: testpackage.preprocessing.ConvertPdfXMLTester
** convert pdf to xml like:
_class_: testpackage.preprocessing.ConvertPdfXML\\
_function_: run
*** load (all) data with pdfbox
_link_: [[https://pdfbox.apache.org/][Pdfbox-Homepage]] 
**** if title (metadata) set and ok => take it
every field is checked for digits, weird signs and min-length (see _function_ clean_field). 
max-length also possible, but consider "title-like" idea. that's why i chose 500.
**** else use docear to extract title
_link_: [[https://www.docear.org/tag/title-extraction/][Docear-Homepage]]\\
if still no title use no entry or implement title-like
**** use title to get Article-Object from DBLP
_class_: testpackage.preprocessing.DBLPDataAccessor\\
_function_: getArticleObj \\
_link_: [[http://dblp.uni-trier.de/faq/How+to+use+the+dblp+search+API.html][DBLP-API]]
**** if successful use all of it's data
possible fields include: title, year, author, doi and score. idea to choose best score.
**** else try to extract element otherwise
with pdfbox (metadata) and NE-recognition (OpenNLP, _function_ extractAuthors). last resort: no entry.\\
_link_: [[https://opennlp.apache.org/docs/1.5.3/manual/opennlp.html][OpenNlp-Doc]]
*** write doc to xml file
_function_ writeToXML
