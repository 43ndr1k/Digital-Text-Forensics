Word Segmentation Approach of Discrete and
Mixed Latin Handwritten Styles
  :الملخص
يقدم هذا البحث طريقة جديدة وكفوءة لعملية تقطيع الكلمات المكتوبة بخط اليد الى حروف منفصلة   
حروف الالتينية ولنمط الخط الطريقة المقترحة مخصصة للكلمات بال. النظمة تمييز كتابة اليد) معزولة كل حد(
ت االبتدائية تعتمد الطريقة على مجموعة من العمليا).  متصل–منفصل (اليدوي بالحروف المنفصل او المختلط 
ض واالسود وعملية يتحويل الصورة الى االبو ازالة التشويش التحضيرية والتي تعتبر اساس نجاح العملية مثل
االولى هي .  ثالث مراحل متالحقةنتتكون الطريقة م.  وعملية التنحيفالميل االفقي والعمودي للكلمةازالة 
مرحلة ماقبل التقطيع  لتحديد الجسم الرئيسي للكلمة والمرحلة الثانية هي التقطيع االبتدائي للكلمة الى مجموعة من 
المقاطع المتصلة كل حسب المرحلة الثالثة هي عملية اختيار العملية المناسبة لتمييز وتقطيع هذه . المقاطع المتصلة
تم فحص وتقييم الطريقة المقترحة باستخدام قاعدة بيانات مكونة من عدد من خطوط يد لعدد من . نسبة الهيئة لها
بالنبة للكلمات المشمولة بهذا الفحص % 90اظهرت النتائج سرعة عالية باالداء ودقة تصل الى . االنماط المختلفة
  .مقارنة بععد من الطرق السابقة
Abstract:
this paper presents a new efficient approach for word segmentation into
individual isolated characters for Handwriting Recognition Systems. The proposed
segmentation method is for spaced discrete and mixed handwritten Latin characters
styles. It is based on slant-skew correction and thinning that represent its cornerstone
beside of some heuristics features and using the projection profiles analysis. The method
composed of three successive stages. The first one is a presegmentation stage that
provides an estimation of the word main body boundaries. The second is a primary
segmentation stage of the likely connected characters (cc’s) which consisting the word;
while the third one is a selection stage of the best processing path according to the aspect
ratio of the extracted connected characters. The approach has been tested using locally
collected database for different writers. It appears very fast processing and accurate
results up to 90% of the handwritten words that were under test.
Keywords: Handwritten, Segmentation, Recognition, Off-line
Dr. Eng. Firas Shawkat Hamid
Ph.D. Communication Engineering
Lecturer in Computer Center, Technical Institute Mosul, Foundation of Technical Education/ Iraq,
e-mail: eng_firas73@yahoo.com
eng.firas73@gmail.com
I. INTRODUCTION
One of the most difficult problems in the area of Handwriting Recognition (HWR) is
the segmentation of unconstrained handwritten text. It has been a popular topic of
research for many years, and has many potential applications such as postal code reading,
bank check processing, forms reading, and office works. In many approaches to off-line,
connected handwriting recognition systems, a segmentation step plays a crucial role in
the recognition. Fig.1 shows a general HWR system including the segmentation step.
Segmentation is the operation that seeks to decompose a word image in a sequence of
sub-images containing isolated characters. It is a critical step of the single word
recognition process, and this is witnessed by the higher performance for the recognition.
Any failure or error in the segmentation step will reduce the recognition accuracy. The
difficulty of handwritten characters segmentation comes from the great variety of
handwriting styles.
The segmentation approaches can be classified into two categories: foreground-based,
and background-based [1]. The proposed segmentation approach belongs to the
foreground-based one. Also for the recognition of handwritten characters strings, two
approaches generally exist: segmentation-then recognition and recognition-based
segmentation [2].
Although many methods have been proposed for segmentation and recognition of
connected handwritten characters, much more improvement is still required to build
robust systems for practical applications to decrease the rejection rate, while maintaining
a good recognition performance. The following brief survey is for some previous
segmentation approaches that all are belonging to the foreground-based class.
Many approaches for segmentation in HWR tasks have been proposed in the past
years. Blumenstein, M. and Verma, B. [3] proposed an Artificial Neural Network (ANN)-
based segmentation algorithm, initially over- segments handwritten word images (for
training and testing) using heuristics and feature detection. Kavallieratou E., Stamatatos
E., Fakotaki N., and Kokkinakis G [4] presented a character segmentation algorithm for
unconstrained cursive handwritten text. The transformation-based learning method and a
Thresholding and
Noise Removal
Slant –Skew estimation
& correction Thinning
Segmentation
Features extractionClassification
& decision
Fig. 1. General handwritten recognition system
Input raw
image word
simplified variation of it are used in order to extract automatically rules that detect the
segment boundaries.
Breuel, T.M [5] described a segmentation algorithm for letters in Roman alphabets,
curved pre-stroke cut (CPSC) segmentation. The CPSC algorithm evaluates large set of
curved cuts through the image of the input string using dynamic programming and selects
a small “optimal” subset of cuts for segmentation. In [6] the later proposed a
representation of segmentations and pre-segmentations in terms of color images. The
paper formally defines the notions of over-segmentation and under-segmentation in terms
of the maximal bipartite match between corresponding pixels.
LI Guo-hong and Shi Peng-fei methodology [7] is used for off-line handwritten
Chinese character recognition. It is based on mergence of consecutive segments of
adaptive duration. Suwa, M. and Naoi, S. [8] proposed a method for segmenting simply
and multiple connected digits. It also removes ligatures. Sadri J., Suen C.Y. and Bui T.D.
[2] proposed a segmentation approach based on the extracting of foreground and
background features.
Morita M., Sabourin R., Bortolozzi F. and Ching Y. [9] presented a hidden Markov
models and the multilayer perceptron (HMM-MLP) hybrid system for segmenting and
recognizing complex date images written on Brazilian bank checks. R. Alhajj and Ashraf
E. [10] employed multiagents to handle the segmentation problem. Their approach is
mainly based on detecting the deepest-top valley and the highest-bottom hill, with one
agent dedicated to each.
Zhi Han and Chang-Ping Liu [11] presented a two-stage character segmentation
algorithm implies simple segmentation stage and the precise segmentation stage. All
candidate segmentation paths are created. Then several optimal candidate paths are
selected from the graph by dynamic programming searching based on recognition
confidence.
The current research aims to provide an efficient approach for segmentation of
handwritten text into individual characters to achieve an enhancement of the recognition
task with faster processing time and higher accuracy.
This paper is comprised of four sections in addition to the introduction and the
references. Section (II) presents the proposed segmentation approach. Section (III) gives
the experimental results and discussion, while the last section (IV) contains the
conclusion drawn from this research.
II. THE PROPOSED SEGMENTATION METHOD
In this paper, the proposed method seeks to generate candidate segmentation points for
discrete-spaced and mixed (discrete & connected) handwritten styles as shown in Fig. 2.
The proposed segmentation method is categorized to the foreground-based approaches
which are working on foreground pixels (black pixels in a binary image) and a mixture
between segmentation-then recognition, and recognition-based segmentation approaches.
The current technique is based on slant-skew correction and thinning that represent the
cornerstone of the presented characters segmentation method beside to some heuristics
features [11] and using the projection profiles analysis. The procedure includes three
stages after the preprocessing steps. The first one is a presegmentation stage that provides
an estimation of the word main body boundaries. The second is a primary segmentation
stage of the likely connected characters (cc’s) which consisting the word; while the third
Fig. 2. Spaced discrete and mixed handwriting styles.
one is a selection stage of the best processing path according to the aspect ratio of the
extracted connected characters.
A. Preprocessing
Three preprocessing techniques are conducted on the gray levels word image. These
techniques are attempted to normalize the raw image as much as possible several general
preprocessing steps are done on the raw word image before the segmentation step. These
steps attempt to normalize the image as much as possible to remove any features that may
affect the segmentation process like color, noise, handwriting skew, slant, size and
thicknesses of characters strokes for the various handwritten styles. Fig (3-a) shows an
image contenting the example word (Relatively) which is used for the explanation.
Thresholding and Noise Removal: The thresholding process means converting the word
image from its gray scale to leave every pixel black or white (converting from gray levels
to the binary 0’s and 1’s resectively). This step generally can help to remove much of the
background noise.
Slant & Skew Correction: This step attempts to correct the general character slant and
skew of a word successively. Estimation is made of the average slant of the strokes from
vertical direction and the skew from horizontal. [12,13]. Slant correction is an important
process for segmentation since it will remove-as possible- the overlapping appeared in
the projection profile between ascenders and descenders of some adjacent characters.
Thinning (Skeletonization): an iterative, erosive, thinning algorithm [14] is applied to
reduce the characters strokes to a width of one pixel. Thinning is an important process for
the proposed segmentation method since it increases the gaps between the characters in
the word. The next step is a thickening process to approximately return these characters
to their original view-approximately-in the original raw image. This process (thinning
and then thickening) will smooth and reduce edge noise of the word after processing
using the aforementioned techniques. This step also tries to make thickness
normalization. Figure 3-b shows the word image after the preprocessing steps.
(b)
Fig. 3. (a) The input raw word image.
(b) The word image after the preprocessing steps.
(a)
Skew
Slant
noise
B. Presegmentation
During this stage the word is processed and an estimation of the position of the
possible segment boundaries is carried out. Both ascenders and descenders of a word
complicate the segmentation process especially in the slanted word. In order to avoid this
problem, the current approach focuses on the main part of the word (body). The main part
is determined by using the Vertical Histogram (VH- black pixels counting in each image
row and projecting it on the vertical line) of the word and excluding the upper and lower
parts where the value of the histogram falls under the (0.25) of its maximum as shown in
Fig. 4. This threshold number 25% is extracted by doing many tests on various HW
words. The success rate of this technique in many experiments was 97%, and overcomes
the drawback of the short words (i.e., words with less than three characters).
Nevertheless, this zone is increased by (1/10) of the main part height of the word (named
main height) towards up and down since in handwritten words the characters are not
always written horizontally within the same word.
Characters without ascenders and descenders, like a, e, c, etc., present almost the same
height and width even when they are handwriting, which varies from person to person.
The same happens with the rest of the characters, if we exclude their ascenders and
descenders. Then, the only exceptions in the English alphabet are the characters w, m, i, j,
l. However, even in these cases, if a general estimation is required, the width can be
expressed as (3/2) height (m, w) or 1/2height (i, j, l) [4]. Since in the presegmentation
stage, only an initial estimation of the possible character segments is performed, is taken
into account. Fig. 5 shows the operation of the word main body determination for the
word (Relatively) that under test. It is clear that the threshold value is about (21) and
equals to (25%) of the VH maximum (84) for the word (Relatively), so there are three
zones that are above the threshold value; therefore; the significant group is always
selected that represents the main part of the word. This will overcome the problems of the
short words, words with many ascenders like the word (Little), with many descenders like
the word (mapping) or with many both ascenders and descenders like the word
(objectively).
0 10 20 30 40 50 60
0
20
40
60
80
100
Threshold
Max. of the histogram
Fig. 4. VH of the word under test. The threshold value is (25%) of
the maximum value.
N
o
.
o
f
p
ix
el
s
p
er
co
lu
m
n
X-Direction
0 20 40 60 80 100 120 140 160 180
0
5
10
15
20
25
Fig. 6. HH of the test word
N
o
.o
f
p
ix
el
s
p
er
co
lu
m
n
X-Direction
C. Connected characters based-segmentation
In this stage the basic connected characters of the word will be segmented, in
which the (cc) may be single character or more than one character. This segmentation is
done by using the Horizontal Histogram (HH- the black pixels counting in each image
column and projecting it on the horizontal line) of the deslanted, deskewed and skeleton
word image version that shown in Fig. 3. The slant correction will eliminate the
overlapping between characters especially between ascenders and descenders with
strokes of the adjacent characters and the thinning will increase the gaps between the
successive characters within the word. The HH of the word under test shown in Fig. 6 is
calculated. The regions of nonzero values are extracted and the primary segmentation
points of the cc’s is extracte. Fig. 7 shows the cc’s segmentation.
D. Segmentation path selection based on (cc) aspect ratio
After the basic cc’s segmentation with projection profile analysis, the aspect ratio
(Width/Main height), which is from now will be referred as (asp) of each (cc) is
calculated. The decision of the suitable processing path will be according to the value of
the asp of the specified (cc). By testing over 200 different characters of different writers,
Fig. 5. Determination the main body boundaries for the word (Relatively) that under test.
Upper limit lineCenter line
Lower limit line
A
sc
en
d
er
s
D
escen
d
ers
Fig. 7. Basic (cc’s) of the word under test
(Relatively).
it is found that most characters after excluding their ascenders and descenders-if they
exists-appear aspect ratios between (0.4 and 1.3) and the narrow characters like (i, j, l)
have asp less than 0.4, while the wider ones like (m, w or cc of more than one character)
have more than 1.3 aspect ratio. Figure 8 shows the different cases (probabilities) of asp
values.
According to the above three cases of asp value regions, there are three individual
classes. Each class has an accommodate process path.
The processing paths will use the skeleton version of cc and with the aid of the VH
and HH calculations beside to the information that are obtained from presegmentation
stage. The result of each path is a set of candidate segmentation points (sp’s) that segment
the word to its individual characters. These characters will continue their processing to
the recognition system after thickening process. The thickening process returns the
character to be near its original view in the word before the thinning process.
Main height=
18 pix
Width=35 pix
(b) asp=1.94 (asp>1.3)
Main height=
18 pix
Width=14 pix
(a) asp=0.77 (0.4< asp <1.3)
Main height=
16 pix
Width=34 pix
(d) asp=2.12 (asp>1.3)
Width=4 pix
(e) asp=0.22 (asp<0.4)
Fig. 8. Aspect ratios for different characters of a specified example
Main height=
17 pix
Width=40 pix
(c) asp=2.35 (asp>1.3)
 Class (1), cc with asp between (0.4 and 1.3):
This will give an indication that the specified cc is a single character as shown in
Fig. 8-a. It can be continued to the recognition system. This path of processing is
named direct segmentation processing path.
 Class (2), cc with asp more than 1.3:
The cc’s in this class is either wide single character like (m or w), cc consists of
more than one connected characters like (Re and at) in our example word (Relatively)
or a single character with normal width but with long horizontal stroke protrudes to
the left or right. Fig. 8-b, c & d shows the different characters that belong to this class.
The ligature between the successive connected characters in cc or the kerned stroke
from the character is a stroke with two features; the first is that this stroke with one
pixel width since the cc is of skeleton version and this information can be obtained by
using the HH analysis of it. The second is that the ligature consists of set (more than
one) of black pixels (0s) that always lay under the center line of the word, i.e. the
black pixels that satisfy these two above conditions can be considered as ligatures as
shown in Fig. 9. The forth mention that the cc may contains more than two connected
characters and then more than one ligatures; therefore; these ligatures are detected
using the pointed out conditions. The operation before can be considered as ligatures
detection and elimination process. The initial candidate sp’s are the starting and the
ending points of each detected ligature. The ligatures in general have three
probabilities (starting ligature, middle and ending ligature) as shown in Fig. 10.
The program will recognize the kind of these extracted ligatures between these
probabilities after a series of rules that applied. If the conditions of these rules are
satisfied the segmentation points can be updated to the final one. If the ligature is a
middle one (between two characters) the sp extracted is the starting and ending points of
it. If it is a starting or ending ligature, the sp will be the end point and start point of them
respectively. The recognition-based segmentation mentioned in the section (II) is part of
this processing path as a solution of a drawback in the current technique.
The drawback is the false ligature detection within a single characters with asp
more than (1.3) that have horizontal strokes with features like of the ligatures features as
the letter (w ). If the recognition system [15] recognizes that this cc is the letter (w ), then
no need to continue the other steps above. Figure 10 shows the final segmentation points
locations. The processing path of this class is named post segmentation process path.
Figure 11 shows the results of the post segmentation process.
Fig.9. The ligature mostly lies under the center line.
 Class (3), cc with asp less than (0.4):
The cc’s in this class are of narrow widths compared with their main heights
representing characters like (l, i, j) or the dots of the later as shown in Fig. 8-e. The
processing program [15] must recognize that the cc under test weather it is a narrow
character. If so it will be segmented from the word by appropriate amount of
background toward left and right. The segmented characters will continue to the
recognition system. If processing program recognized a small part from kerned stroke
of adjacent characters, the program makes decision to considering this cc or
neglecting it according to its pixels weight and their locations with respect to the main
lines of the word. The processing path which deals with this kind of characters is
named narrow processing path.
The Pseudo-code of the segmentation process is shown below:
Start
Load the raw image
Apply the Preprocessing steps
Find out the VH
Get the main body part of the word
Find out the HH
Apply the pre-segmentation step
Segment the cc
Get & Display the cc’s sub-images
Calculate the aspect ratios of each cc
Fix the upper and lower limits of the aspect
Choose the suitable processing path according
to the asp
Case 1
if aspect ≥ asp_lower & aspect ≤ asp_upper    
% normal width
Execute the direct segmentation processing
path
end
Or
Case 2
if aspect  ≥ asp_upper      % wide cc 
execute the post segmentation process path
send cc to a recognition program
if cc is recognized as single wide character
store and display cc
else % (two or more connected
characters)
ligatures detection and elimination
process
segment this cc using the sp’s
store and display cc
end
end
Or
Case 3
if aspect  ≤ asp_lower      % narrow cc 
execute the narrow processing path
send cc to a recognition program
if cc is recognized as single narrow
character
store and display cc
else % (point or noise)
execute the point or noise remove path
end
end
Stop
cc3
sub2sub1
cc1
sub2sub1
Fig.11. The results of the post
segmentation process for class (2)
of cc.
Fig. 10. Probabilities of ligatures between two
characters. The dashed vertical lines are the
location of the sp’s.
III. EXPERIMENTAL RESULTS AND DISCUSSION
The proposed segmentation methodology has been tested on multi-writers collection
of handwritten word images collected from locally database. The collected data contains
different handwritten styles including discrete-spaced characters and mixed (discrete and
connected characters) HW styles. The application of the proposed method to the above
mentioned data produced very satisfactory results with fast processing time and higher
accuracy up to 90%. The ten percent error is due some drawbacks. The first drawback of
the current technique is the saddles ligatures between characters like (ot ), that is cannot
be detected but this type of writing is rare beside to bad-writing scripts. The second one is
the false ligature detection within a single characters that have horizontal strokes with
features like ligatures features as the letter (w ). This problem can be overcome by using a
pre-recognition process to all cc’s of class (2) before any processing. If the recognition
system recognizes that this cc is the letter (w ), then no need to continue the post
segmentation process.
The metric that is used to evaluate the performance is by testing about 200 words for
various handwriting styles of discrete and mixed styles with the aid of a handwriting
recognition system [15]. Some examples of words segmentation into their individual
characters are shown in Fig.12.
The performance test shows that the proposed segmentation technique increases the
recognition accuracy compared with some other techniques including accuracy and the
execution time as shown in Table (1)
Table (1) comparison with other previous methods
Method
Segmentation
Accuracy
Blumenstein et al, 1999, [3] 76.52 %
Kavallieratou et al 2000, [4] 82 %
Sadri et al, 2004 [2] 88.6 %
Morita et al, 2004 [9] 87.2 %
Breuel, 2004 [6] 48 %
Suwa et al, 2004 [8] 88.7 %
Zhi et al, 2005 [11] 79.46 %
Proposed method 90 %
Fig. 12. Some of the experimental results of the proposed segmentation
approach.
IV. CONCLUSION
Up to now the character segmentation algorithm can’t be evaluated and tested very
accurately because there is no standard automatic method to test and evaluate the
performance of the character segmentation algorithm. The most common way is by sight.
The final recognition accuracy of the system applied is often used to evaluate the
performance of the segmentation algorithm.
The presented approach is writer-independent and has been tested on a multi-writer
collection of handwritten words of discrete and mixed style.
The reported results can, however, be considerably improved by training the system
for a specific writer. Since the extracted rules are based on vectors consisting of human
comprehensible information rather than opaque numerical data, a further improvement of
the reported accuracy by refining the automatically extracted rules manually is possible.
Moreover, as shown in Fig. 3, one can achieve very satisfactory results by using
relatively limited training data.
REFERENCES
[1] Yi-Kai Chen, Jhing-Fa Wang. Segmentation of single-or multiple-touching
handwritten numeral string using background and foreground analysis. IEEE
Transactions on Pattern Analysis and Machine Intelligence, Volume (22), Issue 11,
Nov. Page(s):1304 – 1317. 2000.
[2] Sadri, J., Suen, C.Y., Bui T.D. Automatic segmentation of unconstrained handwritten
numeral strings. Frontiers in Handwriting Recognition, Ninth International Workshop
on 26-29 Oct. Page(s):317 – 322. 2004.
[3] Blumenstein M. and Verma, B. A new segmentation algorithm for handwritten word
recognition. Neural Networks, IJCNN'99. International Joint Conference on Volume
(4), Page(s):2893 - 2898 , 10-16 July 1999.
[4] Kavallieratou E., Stamatatos E., Fakotakis N., and Kokkinakis G Handwritten
Character Segmentation Using Transformation-Based Learning. Pattern Recognition
Proceeding 15th International Conference on volume (2), pages 634-637, 3-7 Sept.
2000.
[5] Breuel, T.M. Segmentation of Handprinted Letter Strings using a Dynamic
Programming Algorithm. Proceeding of 6th International Conference on Document
Analysis and Recognition (ICDAR), pages 821-826, 2001.
[6] Breuel, T.M. Representations and metrics for off-line handwriting segmentation.
Frontiers in Handwriting Recognition, Eighth International Workshop Proceedings
Page(s):428 – 433, on 6-8 Aug. 2002.
[7] LI Guo-hong and Shi Peng-fei. An approach to offline handwritten Chinese character
recognition based on segment evaluation of adaptive duration. Journal of Zhejiang
Univ, Shanghai , China, SCI 5(11):1392-1397, 2004.
[8] Suwa, M. and Naoi, S. Segmentation of handwritten numerals by graph
representation” Frontiers in Handwriting Recognition, International Workshop
Page(s):334 – 339, on 26-29 Oct. 2004.
[9] Morita M., Sabourin R., Bortolozzi F. and Ching Y. Segmentation and recognition of
handwritten dates: an HMM-MLP hybrid approach. International Journal on
Document Analysis and Recognition IJDAR 6, 248–262, 2004.
[10] Reda Alhajj and Ashraf E. Multiagents to Separating Handwritten Connected Digits.
ieee transactions on systems, man, and cybernetics-part a: systems and humans,
Volume (35), Issue 5, Page(s): 593 - 602, Sept. 2005.
[11] Zhi H. and Chang-Ping L. A two-stage handwritten character segmentation approach
in mail address recognition. Proceedings of the Eight International Conference on
Document Analysis and Recognition, IEEE, (ICDAR’05), Page(s): 111 – 115, 2005.
[12] Kavallieratou E., Stamatatos E., Fakotakis N., and Kokkinakis G. Slant estimation
algorithm for OCR systems. Pattern Recognition, 34, 2515-2522, 2001.
[13] Petr S. and Venu G. Equivalence of Different Methods for Slant and Skew
Corrections in Word Recognition Applications. ieee transactions on pattern analysis
and machine intelligence, vol.(23), no.3, Page(s): 323 – 326, march 2001.
[14] Gonzalez R. C. and Woods R. E. Digital Image Processing. Addison-Wesley
Publishing Company, Boston, 2nd edition, 2002.
[15] Yazen A. K., Design of an Off-Line Recognition System Based on 2D-Discrete
Wavelet Transform for Latin text, Ph.D. thesis, university of technology, IRAQ,
2006.
