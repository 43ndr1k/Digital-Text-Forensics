Deceiving	  
Authorship	  
Detection	  
Tools	  to	  Write	  Anonymously	  &	  Current	  Trends	  in	  Adversarial	  
Stylometry.	  
	  
Michael	  Brennan,	  Sadia	  Afroz	  and	  Rachel	  Greenstadt.	  Drexel	  
University.	  
Privacy,	  Security	  and	  Automation	  
Lab	  
•  Faculty	  
•  Dr.	  Rachel	  Greenstadt	  
•  Graduate	  Students	  
•  Sadia	  Afroz	  (DecepFon	  DetecFon	  Lead)	  
•  Diamond	  Bishop	  
•  Michael	  Brennan	  
•  Aylin	  Caliskan	  
•  Ariel	  Stolerman	  (JStylo	  Lead	  Developer)	  
•  Undergraduate	  Students	  
•  Pavan	  Kantharaju	  
•  Andrew	  McDonald	  (Anonymouth	  Lead	  Developer)	  
26C3/28C3	  Diff	  
•  Review	  &	  Updated	  Analysis	  of	  26C3	  Material	  
•  New	  Corpus	  (45	  authors)	  
•  New	  Method	  (Writeprints)	  
•  Much	  more	  robust	  results.	  
•  The	  tools	  we	  discussed	  are	  now	  built!	  
•  JStylo	  
•  Anonymouth	  
•  DetecFng	  DecepFon	  in	  Adversarial	  WriFng	  
	  
An	  Overview	  
•  What	  is	  “Authorship	  RecogniFon”	  and	  “Adversarial	  
Stylometry”?	  
•  What	  is	  the	  anonymity	  threat?	  
•  Analyzing	  &	  Deceiving	  Authorship	  RecogniFon	  
•  Two	  Tools	  
•  JStylo	  
•  Anonymouth	  
•  DetecFng	  DecepFon	  
What	  is	  Authorship	  
Recognition?	  
•  The	  basic	  quesFon:	  “who	  wrote	  this	  document?”	  
•  Stylometry:	  The	  study	  of	  a]ribuFng	  authorship	  to	  documents	  
based	  only	  on	  the	  linguisFc	  style	  they	  exhibit.	  
•  “LinguisFc	  Style”	  Features:	  sentence	  length,	  word	  choices,	  
syntacFc	  structure,	  etc.	  
•  HandwriFng,	  content-­‐based	  features,	  and	  contextual	  features	  are	  
not	  considered.	  
•  Individuals	  have	  unique	  wriFng	  styles	  because	  language	  is	  
learned	  on	  an	  individual	  basis.	  
•  In	  this	  presentaFon,	  stylometry	  and	  authorship	  recogniFon	  
are	  used	  interchangeably.	  
What	  is	  Adversarial	  
Stylometry?	  
•  Adversarial	  Stylometry:	  	  Applying	  decepFon	  to	  wriFng	  style	  in	  
order	  to	  affect	  the	  outcome	  of	  stylometric	  analysis.	  
•  But,	  is	  wriFng	  style	  modifiable?	  (Yes!)	  
•  Is	  it	  possible	  to	  deceive	  stylometry	  through	  altered	  wriFng	  style?	  
(Yes!)	  
•  What	  are	  the	  implicaFons	  of	  looking	  at	  stylometry	  in	  an	  
adversarial	  context?	  
How	  Can	  Stylometry	  be	  a	  
Threat?	  
•  Supervised	  Stylometry	  
•  Given	  a	  set	  of	  documents	  of	  known	  authorship,	  classify	  a	  
document	  of	  unknown	  authorship.	  
•  HypotheFcal	  Scenario:	  Alice	  the	  Anonymous	  Blogger	  vs.	  Bob	  the	  
Abusive	  Employer.	  
•  Unsupervised	  Stylometry	  
•  Given	  a	  set	  of	  documents	  of	  unknown	  authorship,	  cluster	  them	  
into	  author	  groups.	  
•  HypotheFcal	  Scenario:	  Anonymous	  Forum	  vs.	  Oppressive	  
Government.	  
Purely	  Hypothetical?	  
•  Previous	  examples	  are	  purely	  hypotheFcal.	  What	  about	  a	  real	  
example?	  
•  From	  “Inside	  WikiLeaks”	  by	  Daniel	  Domscheit-­‐Berg:	  
•  “I	  nudged	  Julian	  with	  my	  foot.	  We	  exchanged	  glances	  and	  started	  
giggling.	   If	  someone	  had	  run	  WikiLeaks	  documents	  through	  such	  
a	  program,	  he	  would	  have	  discovered	  that	  the	  same	  two	  people	  
were	  behind	  all	  the	  various	  press	  releases,	  document	  summaries,	  
and	  correspondence	  issued	  by	  the	  project.	  The	  official	  number	  of	  
volunteers	   we	   had	   was	   also,	   to	   put	   it	   mildly,	   grotesquely	  
exaggerated.”	  
Adversarial	  Stylometry:	  A	  
Review	  
•  Understand	  the	  threat	  model	  
•  Build	  a	  corpus.	  
•  Evaluate	  current	  methods	  of	  stylometry	  against	  adversarial	  
text.	  
•  Analyze	  results	  and	  develop	  tools.	  
Threat	  Model	  
•  Threat:	  Authorship	  recogniFon	  can	  idenFfy	  you	  if	  there	  are	  
sufficient	  wriFng	  samples	  and	  a	  set	  of	  suspects.	  
•  6500+	  words	  of	  training	  data	  per	  author	  
•  500+	  words	  of	  tesFng	  data	  
•  50	  or	  less	  suspects	  
•  These	  may	  be	  different:	  
•  Tweets	  (short	  messages)	  
•  Large	  numbers	  of	  authors	  (Writeprints)	  
•  Old	  assumpFon:	  WriFng	  style	  is	  invariant.	  
•  It’s	  like	  a	  fingerprint,	  you	  can’t	  really	  change	  it.	  
Circumvention	  Methods	  
•  Challenge:	  conceive	  methods	  of	  circumvenFng	  wriFng	  style	  
analysis.	  
•  Obfusca0on	  
•  An	  author	  a]empts	  to	  write	  a	  document	  in	  such	  a	  way	  that	  their	  
personal	  wriFng	  style	  will	  not	  be	  recognized.	  
•  Imita0on	  
•  An	  author	  a]empts	  to	  write	  a	  document	  such	  that	  the	  wriFng	  style	  
will	  be	  recognized	  as	  that	  of	  another	  specific	  author.	  
•  Transla0on*:	  
•  Machine	  translaFon	  is	  used	  to	  translate	  a	  document	  to	  one	  or	  more	  
languages	  and	  then	  back	  to	  the	  original	  language.	  
Building	  a	  Corpus	  
•  Corpus	  =	  Dataset	  of	  documents.	  
•  Data	  sets	  for	  adversarial	  stylometry	  do	  not	  exist.	  ParFcipants	  
are	  required	  to	  crak	  intenFonally	  adversarial	  passages.	  
•  ParFcipaFon	  had	  three	  parts:	  
•  Submit	  6500	  words	  of	  pre-­‐exisFng	  wriFng	  from	  a	  formal	  source.	  
•  	  Write	  a	  new	  500	  word	  obfuscaFon	  passage.	  
•  Task:	  Describe	  your	  neighborhood.	  
•  Write	  a	  new	  500	  word	  imitaFon	  passage.	  
•  Task:	  Imitate	  Cormac	  McCarthy,	  describe	  your	  day.	  
•  Authors	  had	  no	  formal	  training	  or	  knowledge	  in	  linguisFcs	  or	  
stylometry.	  
Brennan-­‐Greenstadt	  Corpus	  
•  12	  Individual	  Authors.	  
•  ParFcipants	  contacted	  through	  classes,	  colleagues,	  friends	  at	  
Drexel	  University.	  
•  MoFve	  for	  proper	  parFcipaFon.	  
•  One-­‐on-­‐one	  interacFon	  with	  parFcipants.	  
•  Corpus	  is	  publicly	  available	  at	  h]ps://psal.cs.drexel.edu	  
•  Good	  for	  preliminary	  results,	  but	  we	  need	  something	  be]er.	  
•  Too	  small.	  
•  Too	  homogenous.	  
Building	  a	  Better	  Corpus	  with	  
Amazon	  Mechanical	  Turk	  
•  Drexel	  AMT	  Corpus	  
•  AMT	  =	  Amazon	  Mechanical	  Turk	  
•  Same	  tasks	  as	  previous	  corpus.	  
•  Only	  45	  of	  101	  of	  submissions	  are	  usable!	  
•  45	  Accepted	  Submissions.	  
•  Guidelines	  without	  spoiling	  data	  set.	  Must	  follow	  direcFons	  and:	  
•  Pre-­‐exisFng	  wriFng	  must	  be	  formal	  in	  nature	  
•  Remove	  non-­‐content	  
•  Minimal	  dialogue/quotaFons	  
•  Refrain	  from	  subminng:	  small	  samples,	  lab	  reports,	  Q&As,	  etc.	  
•  Released	  today.	  Publicly	  available	  at	  h]ps://psal.cs.drexel.edu	  
•  This	  corpus	  is	  large,	  diverse,	  and	  unique.	  
Original	  vs.	  AMT	  Corpus	  
•  AMT	  Corpus	  evaluated	  just	  as	  strongly	  as	  Drexel.	  
•  9-­‐Features	  does	  worse,	  Synonym	  does	  the	  same,	  Writeprints	  
does	  be]er.	  
0	  
0.2	  
0.4	  
0.6	  
0.8	  
1	  
2	   3	   4	   8	  
Number	  of	  Authors	  
9-­‐Feature	  
Brennan-­‐
Greenstad
t	  
AMT	  
Random	  0	  
0.2	  
0.4	  
0.6	  
0.8	  
1	  
2	   3	   4	   8	  
Number	  of	  Authors	  
Synonym	  
Brennan-­‐
Greenstadt	  
AMT	  
Random	  0	  
0.2	  
0.4	  
0.6	  
0.8	  
1	  
2	   3	   4	   8	  
Number	  of	  Authors	  
Writeprints	  
Brennan-­‐
Greenstadt	  
AMT	  
Random	  
Evaluate	  Stylometry	  Methods	  
Against	  the	  Corpus	  
•  Three	  methods	  of	  Stylometry	  
•  9-­‐Feature	  /	  Neural	  Network	  
•  Synonym-­‐Based	  Approach	  
•  Writeprints	  /	  SVM	  
Method	  1:	  
9-­‐Feature	  Set	  Neural	  Network	  
•  Simple	  stylometric	  approach.	  Demonstrates	  potenFal	  
effecFveness	  with	  a	  small	  number	  of	  obscure	  metrics.	  
•  9-­‐Feature	  Set	  
•  Unique	  words,	  Complexity,	  Sentence	  Count,	  Average	  Sentence	  
Length,	  Average	  Syllable	  Count,	  Character	  Count,	  Le]er	  Count,	  
Gunning-­‐Fog	  Readability	  Index,	  Flesch	  Reading	  Ease	  Score.	  
•  Neural	  Network	  Classifier.	  
Method	  2:	  
Synonym-­‐Based	  Approach	  
•  Examines	  word	  choices	  when	  compared	  to	  available	  
synonyms	  and	  frequency	  of	  use.	  
•  Clark	  &	  Hannon,	  2007.	  
•  Good	  demonstraFon	  of	  single	  feature	  type	  stylometry.	  
Method	  3:	  
Writeprints	  (SVM)	  
•  Based	  on	  the	  Writeprints	  approach	  by	  Abbasi	  &	  Chen,	  2008.	  
•  Writeprints	  Baseline	  Feature	  Set.	  
•  Contains	  hundreds	  of	  features	  including	  character	  and	  word	  n-­‐
grams,	  funcFon	  words,	  parts-­‐of-­‐speech	  tags,	  punctuaFon,	  and	  
character	  level	  metrics.	  
•  Support	  Vector	  Machine	  Classifier	  
•  Standard	  for	  mulF-­‐class	  classificaFon	  in	  stylometry.	  
•  ImplementaFon	  of	  the	  full	  Writeprints	  approach	  uses	  a	  more	  
extensive	  feature	  set	  and	  unique	  classificaFon	  approach.	  
Detecting	  Authorship	  
•  Four	  experiments.	  
•  Baseline:	  Evaluate	  the	  non-­‐adversarial	  passages	  to	  establish	  a	  
baseline	  accuracy	  for	  each	  method	  and	  feature	  set.	  
•  Obfusca0on:	  A]empt	  classificaFon	  of	  the	  obfuscaFon	  passages	  
when	  classifiers	  are	  trained	  on	  the	  baseline	  data.	  
•  Imita0on:	  A]empt	  classificaFon	  of	  the	  imitaFon	  passages.	  
•  Imita0on	  Success:	  Analyze	  the	  number	  of	  successful	  imitaFons.	  
0	  
0.1	  
0.2	  
0.3	  
0.4	  
0.5	  
0.6	  
0.7	  
0.8	  
0.9	  
1	  
5	   10	   15	   20	   25	   30	   35	   40	  
Number	  of	  Authors	  
Baseline	  Precision	  
9-­‐Feature	  (NN)	  
Synonym-­‐Based	  
Writeprints	  Baseline	  
(SVM)	  
Random	  
0	  
0.1	  
0.2	  
0.3	  
0.4	  
0.5	  
0.6	  
0.7	  
0.8	  
0.9	  
1	  
5	   10	   15	   20	   25	   30	   35	   40	  
Number	  of	  Authors	  
Obfuscation	  Precision	  
9-­‐Feature	  (NN)	  
Synonym-­‐Based	  
Writeprints	  Baseline	  
(SVM)	  
Random	  
0	  
0.1	  
0.2	  
0.3	  
0.4	  
0.5	  
0.6	  
0.7	  
0.8	  
0.9	  
1	  
5	   10	   15	   20	   25	   30	   35	   40	  
Number	  of	  Authors	  
Imitation	  Precision	  
9-­‐Feature	  (NN)	  
Synonym-­‐Based	  
Writeprints	  Baseline	  
(SVM)	  
Random	  
0	  
0.1	  
0.2	  
0.3	  
0.4	  
0.5	  
0.6	  
0.7	  
0.8	  
0.9	  
1	  
5	   10	   15	   20	   25	   30	   35	   40	  
Number	  of	  Authors	  
Imitation	  Success	  (Framing	  Cormac	  McCarthy)	  
9-­‐Feature	  (NN)	  
Synonym-­‐Based	  
Writeprints	  Baseline	  
(SVM)	  
Random	  
Two	  Tools	  
•  JStylo:	  Authorship	  RecogniFon	  Analysis	  Tool.	  
•  Anonymouth:	  Authorship	  RecogniFon	  Evasion	  Tool.	  
•  Free,	  Open	  Source.	  (GNU	  GPL)	  
•  Alpha	  releases	  available	  today	  at	  h]ps://psal.cs.drexel.edu	  
•  MigraFng	  to	  GitHub	  soon.	  
JStylo:	  The	  Problem	  
•  Stylometry-­‐based	  research	  is	  difficult.	  
•  ExisFng	  tools	  are	  good	  but	  limited.	  
•  Weka	  provides	  a	  suite	  of	  machine-­‐learning	  classificaFon	  tools.	  
•  Not	  tailored	  for	  text	  analysis	  –	  no	  feature	  extracFon	  ability.	  
•  FuncFons	  be]er	  as	  an	  API	  for	  sokware	  development.	  
•  JGAAP	  has	  a	  strong	  basic	  toolset	  for	  stylometry.	  
•  Limited	  in	  running	  mulFple	  feature	  sets.	  
•  Strong	  API.	  
•  Extendable.	  Intended	  to	  be	  used	  this	  way.	  
•  Nuances	  of	  stylometry	  are	  not	  easy	  to	  grasp.	  
•  Many	  open	  research	  quesFons	  related	  to	  authorship.	  We	  
need	  an	  easy-­‐to-­‐use	  tool	  that	  both	  researchers	  and	  non-­‐
technical	  users	  can	  understand.	  
JStylo	  
•  JStylo	  is	  an	  authorship	  recogniFon	  analysis	  tool.	  It	  is	  built	  
upon	  a	  framework	  of:	  
•  JGAAP	  (Java	  Graphical	  Authorship	  A]ribuFon	  Project)	  
•  Weka	  3	  Data	  Mining	  Sokware	  
•  Features	  
•  Two	  exisFng	  adversarial	  corpora,	  featured	  in	  this	  presentaFon,	  
and	  new	  corpus	  building	  funcFonality.	  
•  Wide	  selecFon	  of	  wriFng	  feature	  extractors	  and	  ability	  to	  add	  
new	  extractors.	  
•  Wide	  selecFon	  of	  machine	  learning	  based	  classifiers.	  
•  IntuiFve	  GUI.	  
•  Alpha	  Release	  Available	  Now:	  h]ps://psal.cs.drexel.edu	  
JStylo	  Demo	  
(send	  bug	  reports,	  suggesFons,	  quesFons	  to	  ariels@drexel.edu)	  
(send	  bug	  reports,	  suggesFons,	  quesFons	  to	  ariels@drexel.edu)	  
(send	  bug	  reports,	  suggesFons,	  quesFons	  to	  ariels@drexel.edu)	  
(send	  bug	  reports,	  suggesFons,	  quesFons	  to	  ariels@drexel.edu)	  
(send	  bug	  reports,	  suggesFons,	  quesFons	  to	  ariels@drexel.edu)	  
(send	  bug	  reports,	  suggesFons,	  quesFons	  to	  ariels@drexel.edu)	  
(send	  bug	  reports,	  suggesFons,	  quesFons	  to	  ariels@drexel.edu)	  
(send	  bug	  reports,	  suggesFons,	  quesFons	  to	  ariels@drexel.edu)	  
(send	  bug	  reports,	  suggesFons,	  quesFons	  to	  ariels@drexel.edu)	  
(send	  bug	  reports,	  suggesFons,	  quesFons	  to	  ariels@drexel.edu)	  
JStylo	  Dev	  Goals	  
•  Wider	  selecFon	  of	  classificaFon	  methods	  and	  features.	  
•  Writeprints,	  Synonym-­‐based,	  more	  Weka	  methods.	  
•  Ensemble	  classifiers,	  weighted	  averaging.	  
•  Greater	  pre	  and	  post-­‐processing	  opFons.	  
•  Easier	  to	  use	  and	  understand	  for	  non-­‐technical	  users.	  
•  Adding	  an	  online	  tutorial.	  
•  GUI	  installs	  of	  new	  feature	  extractors	  and	  classifiers.	  
•  Logging	  and	  graphing	  results	  over	  mulFple	  experiments.	  
•  VisualizaFon	  of	  documents,	  authors,	  and	  classificaFons.	  
Anonymouth:	  The	  Problem	  
•  Authorship	  recogniFon	  can	  be	  a	  legiFmate	  threat	  to	  privacy	  
and	  anonymity.	  
•  IntuiFon	  in	  changing	  wriFng	  style	  goes	  a	  long	  way,	  but	  may	  
not	  be	  enough	  and	  may	  not	  be	  sustainable	  over	  mulFple	  
documents.	  
•  We	  already	  see	  methods	  that	  offer	  some	  resistance	  to	  adversarial	  
passages.	  
•  Fully	  automated	  text	  anonymizaFon	  is	  an	  intractable	  problem.	  
•  We	  need	  a	  soluFon	  that	  explains	  authorship	  recogniFon	  nuances	  
as	  needed	  and	  assists	  the	  authoring	  making	  the	  most	  useful	  
changes	  towards	  anonymity.	  
Anonymouth	  
•  Anonymouth	  is	  an	  authorship	  recogniFon	  circumvenFon	  tool.	  
It	  is	  built	  upon	  a	  framework	  of:	  
•  JStylo	  (JGAAP	  &	  Weka)	  
•  WordNet	  
•  Features	  
•  Corpora,	  feature	  extractor,	  and	  classifier	  funcFonality	  from	  
JStylo.	  
•  SuggesFon	  system	  for	  modifying	  documents	  to	  evade	  authorship	  
detecFon.	  Ideal	  value	  for	  each	  feature	  is	  calculated,	  existence	  of	  
the	  features	  is	  highlighted,	  user	  is	  assisted	  in	  changing	  them.	  
•  IteraFve	  approach	  to	  anonymizing	  wriFng	  style.	  
•  DicFonary	  /	  Synonyms	  /	  InteracFve	  EdiFng	  Console	  
•  Alpha	  Release	  Available	  Now:	  h]ps://psal.cs.drexel.edu	  
Anonymouth	  Demo	  	  
(send	  bug	  reports,	  suggesFons,	  quesFons	  to	  awm32@drexel.edu)	  
(send	  bug	  reports,	  suggesFons,	  quesFons	  to	  awm32@drexel.edu)	  
(send	  bug	  reports,	  suggesFons,	  quesFons	  to	  awm32@drexel.edu)	  
(send	  bug	  reports,	  suggesFons,	  quesFons	  to	  awm32@drexel.edu)	  
(send	  bug	  reports,	  suggesFons,	  quesFons	  to	  awm32@drexel.edu)	  
(send	  bug	  reports,	  suggesFons,	  quesFons	  to	  awm32@drexel.edu)	  
(send	  bug	  reports,	  suggesFons,	  quesFons	  to	  awm32@drexel.edu)	  
(send	  bug	  reports,	  suggesFons,	  quesFons	  to	  awm32@drexel.edu)	  
(send	  bug	  reports,	  suggesFons,	  quesFons	  to	  awm32@drexel.edu)	  
(send	  bug	  reports,	  suggesFons,	  quesFons	  to	  awm32@drexel.edu)	  
(send	  bug	  reports,	  suggesFons,	  quesFons	  to	  awm32@drexel.edu)	  
(send	  bug	  reports,	  suggesFons,	  quesFons	  to	  awm32@drexel.edu)	  
(send	  bug	  reports,	  suggesFons,	  quesFons	  to	  awm32@drexel.edu)	  
Anonymouth	  Challenges	  
•  Features	  are	  oken	  not	  independent.	  
•  Increasing	  the	  number	  of	  complex	  words	  will	  also	  increase	  
average	  syllable	  count.	  
•  Reducing	  the	  number	  of	  Fmes	  a	  specific	  word	  occurs	  will	  also	  
affect	  the	  lexical	  density.	  
•  How	  can	  we	  create	  an	  algorithm	  for	  anonymity	  that	  generates	  
an	  obfuscated	  document	  with	  minimal	  effort	  and	  without	  
circular	  feature	  modificaFon?	  
Anonymouth	  Dev	  Goals	  
•  Streamlined	  suggesFon	  system.	  
•  Improved	  automaFon	  on	  applicable	  features.	  
•  Improved	  clustering	  algorithm	  to	  provide	  opFmal	  path	  to	  
anonymity.	  
•  Improved	  ediFng	  interface.	  
•  Increased	  phrase	  and	  word	  synonym	  set	  support.	  
•  Edit	  by	  blocks	  of	  text,	  not	  simply	  feature-­‐by-­‐feature.	  
•  Wider	  set	  of	  features	  and	  classificaFon	  methods.	  
•  MulF-­‐method	  and	  feature	  collecFon	  analysis.	  
•  Usability	  and	  anonymity	  user	  studies.	  
Opening	  Development	  
•  Project	  will	  conFnue	  to	  be	  developed	  by	  PSAL	  at	  Drexel,	  but	  
we	  welcome	  collaboraFon	  and	  parFcipaFon.	  
•  We	  are	  interested	  in…	  
•  LinguisFc	  Experts	  
•  Security	  Advisors	  
•  UI	  Experts	  
Can	  we	  detect	  stylistic	  deception?	  
	  
Regular	  
	  
Obfuscated	  
Imitated	  
Detecting	  stylistic	  deception	  is	  
possible	  
98	  
85	  
89.5	  
95.7	  
75.3	  
59.9	  
94.5	  
48	  
43	  
0	  
10	  
20	  
30	  
40	  
50	  
60	  
70	  
80	  
90	  
100	  
Regular	   ImitaFon	   ObfuscaFon	  
Writeprint,	  SVM	  
Lying-­‐detecFon,	  J48	  
9-­‐feature	  set,	  J48	  
!"##$ !%##$ !&##$ #$ &##$ %##$ "##$ '##$
()*+,-$./012$
3/456-7*89$
:-;1;<*6*89$=>?$*)1-7@$
ABCD$E966;<6-2$
E-)8-)F-$3/,)8$
ABCD$E-)8-)F-$G-)C8H$
ABC$./01$G-)C8H$
EH/08./012$
I-02/);6$I0/)/,)$
A1B-0<$
I0-5/2*J/)$
A1K-FJB-$
I;0JF6-$
3/)K,)FJ/)$
3;01*);6$),4<-0$
L7*28-)J;6$8H-0-$
!"#$%&'($')&#*+,&''''''
!"#$%&-'($')&#*+,&-'($'./0+-1#23$'45#16'
Feature	  Changes	  in	  	  
Obfuscated	  Passages	  
Feature	  Changes	  in	  
Imitated	  Passages	  
!"##$ !%##$ !&##$ #$ &##$ %##$ "##$ '##$
()*+,-$./012$
3/456-7*89$
:-;1;<*6*89$=>?$*)1-7@$
ABCD$E966;<6-2$
E-)8-)F-$3/,)8$
ABCD$E-)8-)F-$G-)C8H$
ABC$./01$G-)C8H$
EH/08./012$
I-02/);6$I0/)/,)$
A1B-0<$
I0-5/2*J/)$
A1K-FJB-$
I;0JF6-$
3/)K,)FJ/)$
3;01*);6$),4<-0$
L7*28-)J;6$8H-0-$
!"#$%&'($')&#*+,&'
!"#$%&-'($')&#*+,&-'($'./(*#01$'23#45'
Problem	  with	  the	  dataset:	  
Topic	  Similarity	  
•  All	  the	  decepFve	  documents	  were	  of	  same	  topic.	  
•  Non-­‐content-­‐specific	  features	  have	  same	  effect	  as	  content-­‐
specific	  features.	  
!"
!#$"
!#%"
!#&"
!#'"
!#("
!#)"
!#*"
!#+"
!#,"
$"
-.-/0123" 4567804" 29:7;<0123"
!
"#
$
%
&'
($
)
*+,$($-.)/(+0-1)2%#34$&)
5,$6.)78)9+,$($-.)8$%.'($)&$.)+-)9$.$60-1)
%9:$(&%(+%4)%'.;7(&;+3)
=>3/0<1<"
?5@-<08"
A23/53/"
Hemingway-­‐Faulkner	  Imitation	  	  
Corpus	  
	  •  ArFcles	  from	  the	  InternaFonal	  ImitaFon	  Hemingway	  Contest	  
(2000-­‐2005)	  
•  ArFcles	  from	  the	  Faux	  Faulkner	  Contest	  (2001-­‐2005)	  
•  Original	  excerpts	  of	  Ernest	  Hemingway	  and	  William	  Faulkner	  
	  
Deception	  detection	  is	  possible	  
even	  when	  the	  topic	  is	  not	  similar	  
•  81.2%	  accurate	  in	  detecFng	  imitated	  documents.	  
	  
Long	  term	  deception	  
•  A	  Gay	  Girl	  In	  Damascus	  blog:	  
•  Original	  author	  was	  a	  40-­‐year	  old	  American	  ciFzen,	  Thomas	  
MacMaster.	  
•  Pretended	  to	  be	  a	  Syrian	  gay	  woman,	  Amina	  Arraf.	  
•  The	  author	  worked	  for	  at	  least	  5	  years	  to	  create	  a	  new	  style.	  
	  
	  
Long	  term	  deception	  is	  hard	  to	  
detect	  
•  None	  of	  the	  blog	  posts	  were	  found	  to	  be	  decepFve.	  
•  But	  regular	  authorship	  recogniFon	  can	  help.	  
•  We	  tried	  to	  a]ribute	  authorship	  of	  the	  blog	  posts	  using	  
Thomas	  (as	  himself),	  Thomas	  (as	  Amina),	  Bri]a	  (Thomas’s	  
wife).	  
•  54.3%	  of	  the	  blog	  posts	  were	  a]ributed	  to	  Thomas	  (as	  
himself)	  

Recap	  
•  Available	  Now:	  
•  Brennan-­‐Greenstadt	  Adversarial	  Stylometry	  Corpus	  (12	  Authors)	  
•  Drexel	  AMT	  Adversarial	  Stylometry	  Corpus	  (45	  Authors)	  
•  JStylo	  Alpha	  Release	  
•  Anonymouth	  Alpha	  Release	  
•  Future	  Work:	  
•  Beta	  releases	  of	  JStylo	  and	  Anonymouth	  
•  Academic	  publicaFon	  of	  new	  results	  
•  ConFnued	  analysis	  of	  decepFon	  detecFon	  and	  short	  message	  
classificaFon	  
•  ConFnued	  research	  on	  improving	  parFally	  automated	  
anonymizaFon	  
Thanks.	  
•  We	  want	  to	  hear	  from	  you.	  
•  Mike	  Brennan	  (mb553@drexel.edu)	  
•  Rachel	  Greenstadt	  (greenie@cs.drexel.edu)	  
•  Ariel	  Stolerman,	  JStylo	  Lead	  (ariels@drexel.edu)	  
•  Andrew	  McDonald,	  Anonymouth	  Lead	  (ams23@drexel.edu)	  
•  Sadia	  Afroz,	  DecepFon	  DetecFon	  Lead	  (sa499@drexel.edu)	  
•  Aylin	  Caliskan,	  TranslaFon	  &	  Stylometry	  (ac993@drexel.edu)	  
•  PSAL:	  h]ps://psal.cs.drexel.edu	  
•  We	  are	  looking	  for	  interested	  grad	  students	  and	  post-­‐docs!	  
Addendum	  Slides	  
Research	  Questions,	  
Practical	  Implications.	  
	  
•  Our	  upcoming	  research	  quesFons	  have	  substanFal	  pracFcal	  
implicaFons.	  
•  How	  do	  you	  anonymize	  a	  document	  sufficiently	  in	  a	  
reasonable	  period	  of	  Fme?	  
•  What	  is	  sufficient?	  What	  is	  reasonable?	  
•  Can	  Anonymouth	  be	  used	  to	  successfully	  imitate	  other	  
authors?	  
•  Can	  Anonymouth	  maintain	  long-­‐term	  decepFon?	  Can	  its	  
usage	  be	  detected?	  
•  JStylo	  vs.	  Anonymouth	  –	  who	  wins?	  
•  Based	  on	  JStylo,	  Anonymouth	  will	  have	  everything	  it	  needs	  to	  
help	  evade	  detecFon	  by	  the	  methods	  it	  contains.	  
Two	  Tools?	  	  
•  Aren’t	  we	  creaFng	  a	  tool	  that	  enables	  surveillance	  and	  de-­‐
anonymizaFon?	  
•  Anonymouth	  can’t	  exist	  without	  JStylo.	  But	  it	  also	  shows	  that	  you	  
can’t	  necessarily	  depend	  on	  stylometry	  to	  assign	  authorship.	  
•  JStylo	  allows	  for	  easier	  use	  of	  authorship	  recogniFon	  tools,	  but	  is	  
extensible	  and	  open-­‐source.	  ImplemenFng	  a	  method	  in	  JStylo	  will	  
enable	  counter-­‐a]acks	  in	  Anonymouth.	  
•  JStylo	  vs.	  Anonymouth	  –	  who	  wins?	  
•  Based	  on	  JStylo,	  Anonymouth	  will	  have	  everything	  it	  needs	  to	  
help	  evade	  detecFon	  by	  the	  methods	  it	  contains.	  
•  Note	  that	  nothing	  prevents	  others	  from	  plugging	  in	  proprietary	  
stylometric	  methods	  into	  their	  version	  of	  JStylo.	  
