d i g i t a l i n v e s t i g a t i o n 5 ( 2 0 0 8 ) S 4 2 – S 5 1ava i lab le a t www.sc iencedi rec t .com
journa l homepage : www.e lsev ie r . com/ loca te /d i inA novel approach of mining write-prints for authorship
attribution in e-mail forensicsFarkhund Iqbal*, Rachid Hadjidj, Benjamin C.M. Fung, Mourad Debbabi
Concordia Institute for Information Systems Engineering, Faculty of Engineering and Computer Science, Concordia University, Montreal,
Quebec, Canada H3G 1M8Keywords:
E-mail forensic analysis
Authorship identification
Data mining
Write-print
Frequent itemsets* Corresponding author.
E-mail addresses: iqbal_f@encs.concordia
debbabi@ciise.concordia.ca (M. Debbabi).
1742-2876/$ – see front matter ª 2008 Digita
doi:10.1016/j.diin.2008.05.001a b s t r a c t
There is an alarming increase in the number of cybercrime incidents through anonymous
e-mails. The problem of e-mail authorship attribution is to identify the most plausible au-
thor of an anonymous e-mail from a group of potential suspects. Most previous contribu-
tions employed a traditional classification approach, such as decision tree and Support
Vector Machine (SVM), to identify the author and studied the effects of different writing
style features on the classification accuracy. However, little attention has been given on en-
suring the quality of the evidence. In this paper, we introduce an innovative data mining
method to capture the write-print of every suspect and model it as combinations of features
that occurred frequently in the suspect’s e-mails. This notion is called frequent pattern,
which has proven to be effective in many data mining applications, but it is the first
time to be applied to the problem of authorship attribution. Unlike the traditional ap-
proach, the extracted write-print by our method is unique among the suspects and, there-
fore, provides convincing and credible evidence for presenting it in a court of law.
Experiments on real-life e-mails suggest that the proposed method can effectively identify
the author and the results are supported by a strong evidence.
ª 2008 Digital Forensic Research Workshop. Published by Elsevier Ltd. All rights reserved.1. Introduction abused for committing infrastructure crimes by transmittingE-mail is one of the most widely used ways of written commu-
nication over the Internet, and its traffic has increased expo-
nentially with the advent of World Wide Web. Trillions of
business letters, financial transactions, governmental orders
and friendly messages are exchanged through e-mail system
each year. The increase in e-mail traffic comes also with an in-
crease in the use of e-mails for illegitimate purposes (Teng
et al., 2004). Phishing, spamming, e-mail bombing, threaten-
ing, cyber bullying, racial vilification, child pornography, and
sexual harassments are common examples of e-mail abuses.
Terrorist groups and criminal gangs are using e-mail systems
as a safe channel for their communication. E-mail is also.ca (F. Iqbal), hadjidj@enc
l Forensic Research Workworms, viruses, Trojan horses, hoaxes and other malicious
executables over the Internet. In many misuse cases, the
criminals attempt to hide their true identity. Likewise, in
phishing, a person may try to impersonate a manager or a fi-
nancial adviser to obtain clients’ secret information.
E-mail systems are inherently vulnerable to misuse for
three main reasons. First, an e-mail can be spoofed and the
meta data contained in its header about the sender and the
path along which the message has travelled can be forged or
anonymized. An e-mail can be routed through anonymous
e-mail servers to hide the information about its origin. Sec-
ond, e-mail systems are capable of transporting executables,
hyperlinks, Trojan horses, and scripts. Third, the Internets.concordia.ca (R. Hadjidj), fung@ciise.concordia.ca (B.C.M. Fung),
shop. Published by Elsevier Ltd. All rights reserved.
Frequent
Patterns
FP(E
1
)
Frequent
Patterns
FP(E
2
)
Mining Mining Mining
Frequent
Patterns
FP(E
3
)
Filtering
Write-Print
WP(E
2
) of S
2
Filtering Filtering
E-mails E2 of S2 E-mails E3 of S3E-mails E1 of S1
Fig. 1 – Mining write-print WP(E2) of S2.
d i g i t a l i n v e s t i g a t i o n 5 ( 2 0 0 8 ) S 4 2 – S 5 1 S43including e-mail services is accessible through public places,
such as net cafes and libraries, which further deteriorates
the anonymity issues. Presently, there is no adequate proac-
tive mechanism to prevent e-mail misuses, and merely in-
stalling filters and firewalls are insufficient. In this situation,
forensic e-mail analysis with special focus on authorship at-
tribution can help prosecute the offender of e-mail misuse
by means of law (Teng et al., 2004).
The problem of authorship attribution in the context of e-mail
forensics can be described as follows: a cyber forensic investi-
gator wants to determine the author of a given malicious
e-mail m and has to identify that the author is likely to be
one of the suspects {S1,., Sn}. The problem is to identify the
most plausible author from the suspects {S1,., Sn} and to
gather convincing evidence to support the finding in a court
of law. In forensic science, an individual can be uniquely iden-
tified by his/her fingerprint. Similarly, in cyber forensics, an
investigator would like to identify the ‘‘write-print’’ of an indi-
vidual from his/her e-mails and use it for authorship attribu-
tion. The key question is:
What exactly are the patterns that can represent the write-
print of an individual?
Our insight is that the write-print of an individual is the
combinations of features that occur frequently in his/her written
e-mails. The commonly used features are lexical, syntactical,
structural and content-specific attributes (see Section 2.1). By
matching the write-print with the malicious e-mail, the true
author can be identified. Most importantly, the matched
write-print should provide credible evidence for supporting
the conclusion. The research community (De Vel, 2000; Teng
et al., 2004; Zheng et al., 2006) has devoted a lot of efforts in
studying stylistic and structural features individually, but
very few of them has studied the combinations of features
that form a write-print and addressed the issue of evidence
gathering.
The classification models employed in previous contribu-
tions on authorship attribution have two broad categories: De-
cision tree (C4.5) (Quinlan, 1986) and Support Vector Machine
(SVM) (Cristianini and Shawe-Taylor, 2000). While building
a decision tree, a decision node is constructed by simply con-
sidering the local information of one attribute, therefore, it
fails to capture the combined effect of several features. In con-
trast, SVM avoids such problem by considering all features
when a hyperplane is created. However, SVM is a like
a black-box function which takes some input (the malicious
e-mail) and provides an output (the author). It fails to provide
intuitive explanation of how it arrives to a certain conclusion.
Therefore, SVM may not be the best choice in the context of e-
mail forensic investigation, where collecting credible evidence
is one of the primary objectives.
In this paper, we are introducing a novel approach of au-
thorship attribution in which the unique write-print of every
suspect is extracted. These write-prints are used to identify
the true author of a disputed e-mail, and to gather convincing
and credible evidence to support the finding. To concisely
model the write-print of an individual, we borrow the concept
of frequent pattern (a.k.a. frequent itemset) (Agrawal et al., 1993)
from data mining to capture the combinations of features thatfrequently occurred in an individual’s e-mails. Frequent pat-
tern mining has been proven to be a very successful data min-
ing technique for finding hidden patterns in DNA sequences,
customer purchasing habits, security intrusions, and many
other applications of pattern recognition. To the best of our
knowledge, this is the first paper introducing the concept of
frequent pattern to the problem of authorship attribution.
Fig. 1 depicts an overview of our proposed method. We first
extract the set of frequent patterns independently from the
e-mails Ei written by suspect Si. Though the set of frequent
patterns captures the writing style of a suspect Si, it is inappro-
priate to use all the frequent patterns to form the write-print
of a suspect Si because an other suspect, say Sj, may share
some common writing patterns with Si. Therefore, it is crucial
to filter out the common frequent patterns and identify the
unique patterns that can differentiate the writing style of a sus-
pect from that of others. These unique patterns form the write-
print of a suspect. This approach has the following merits that
are not found in most of the existing works.
 Justifiable evidence: the write-print, represented as a set of
unique patterns, is extracted from the e-mails of a particular
suspect. Our method guarantees that the identified patterns
are frequent in the e-mails of one suspect only, and are not
frequent in others’ e-mails. It will be difficult for the accused
suspect to deny the validity of the findings. The results
obtained are traceable, justifiable, and can be presented
quantitatively with a statistical support.
 Flexible writing styles: the frequent pattern mining technique
can adopt all four types of commonly used writing style fea-
tures (described in Section 2.1). This flexibility is important
for determining the combined effect of different features.
This is much more flexible than the traditional decision
tree, which primarily relies on the nodes at the top of the
tree to differentiate the writing styles of all suspects.
d i g i t a l i n v e s t i g a t i o n 5 ( 2 0 0 8 ) S 4 2 – S 5 1S44 Features optimization: unlike the traditional approaches
where it is hard to determine the contribution of each fea-
ture in the authorship attribution process (De Vel et al.,
2001a), the proposed technique is based on the distinctive
patterns, which are the combination of features. The sup-
port associated to each pattern in the write-print set deter-
mines the contribution of each pattern.
 Generic application: the dataset used in most of the existing
techniques are constrained by the number, size and topic
of e-mails. Our experiments on the real-life data, the Enron
e-mail corpus, suggest that the proposed approach is very
robust to these factors. This is crucial for the application
in real world investigations.
The rest of the paper is organized as follows. Section 2 re-
views the previous contributions. Section 3 formally defines
the problem and the notions of write-print. Section 4
describes our proposed approach. Section 5 evaluates our pro-
posed method on real-life e-mail dataset. Section 6 concludes
the paper.2. Related work
Most previous contributions on authorship attribution are ap-
plications of text classification analysis (De Vel, 2000). The
process starts by identifying a set of writing style features of
a person that are relatively common in most of his works. A
classifier is trained on the collected writing style features to
build a model, which is then used to classify the disputed
e-mail to the most plausible author among the suspects. In
this section, we review the commonly employed writing style
features and summarize the techniques of e-mail authorship
attribution found in the literature of authorship attribution.
2.1. Writing style features
There is no predefined set of features that can be used to dif-
ferentiate the writing styles of different suspects. The writing
patterns usually contain the characteristics of words usage,
words sequence, composition and layouts, common spelling
and grammatical mistakes, vocabulary richness, hyphenation
and punctuation. Abbasi and Chen (2008) presented a compre-
hensive analysis on the stylistics features. Below, we provide
a summary of the common writing style features, namely, lex-
ical, syntactical, structural and content-specific attributes.
Lexical features are the characteristics of both characters
and words or tokens. In terms of characters, for instance, fre-
quency of letters, frequency of capital letters, total number of
characters per token and character count per sentence are the
most relevant metrics. Word-based lexical features may in-
clude word length distribution, words per sentence, and vo-
cabulary richness. Initially, researchers thought that
vocabulary richness (Yule, 1938, 1944) and word usage
(Holmes, 1998) are discriminating features to be used for au-
thorship attribution. Syntactic features include the distribution
of function words (such as ‘‘upon’’, ‘‘thus’’, ‘‘above’’) and
punctuation play a significant role in authorship attribution
(Burrows, 1989; Holmes and Forsyth, 1995; Tweedie and
Baayen, 1998). Structural features are used to measure theoverall layout and organization of text within documents.
For instance, average paragraph length, number of para-
graphs per document, presence of greetings and their position
within the e-mail are common structural features. Moreover,
the presence of sender signature including his contact infor-
mation is one of the special structural features of e-mail doc-
uments. Content-specific features are collection of certain
keywords commonly found in a specific domain and may
vary from context to context even for the same author. Zheng
et al. (2006) used 11 keywords from the cybercrime taxonomy
in authorship analysis experiments.
2.2. E-mail authorship analysis
Authorship analysis has been very successful in resolving au-
thorship attribution disputes over literary and conventional
writings (Mendenhall, 1887). However, e-mail authorship at-
tribution poses some special challenges due to its special
characteristics of size and composition, as compared to liter-
ary works (De Vel et al., 2001a). Literary documents are usually
large in size comprising of (at least) several paragraphs and
have a definite syntactic and semantic structure. In contrast,
e-mails are short in size and usually do not follow definite
syntactic or grammatical rules, therefore, it is hard to learn
from them about the writing patterns of their author. Ledger
and Merriam (1994), for instance, established that authorship
analysis results would not be significant for texts containing
less than 500 words. Moreover, e-mails are more interactive
and informal in style, and people are not couscous about the
spelling and grammatical mistakes particularly in informal
e-mails. Therefore, techniques which are very successful in
literary and traditional works are not applicable in the e-
mail authorship attribution.
Teng et al. (2004) and De Vel (2000) applied Support Vector
Machine (SVM) classification model over a set of stylistic and
structural features for e-mail authorship attribution. De Vel
et al. (2001b) and Corney et al. (2002) performed extensive ex-
periments and found that the classification accuracy decreases
when the size of training set decreases, the number of authors
increases, or the length of documents decreases. Recently,
Zheng et al. (2006, 2003) used a comprehensive set of lexical,
syntactical and structural features including 10–11 content-
specific keywords. Haltern (2007) used the same set of linguistic
features for authorship attribution of class essays. De Vel (2000)
further found that by increasing the number of function words
from 122 to 320, the performance of SVM worsened, which
weakens the argument that SVM supports high dimensional-
ity. This result also illustrates that adding more features does
not necessarily improve the accuracy. In contrast, in this paper
we focus on identifying the combinations of key features that
can differentiate the writing style of different suspects and fil-
tering out the useless features that do not contribute towards
the goal of authorship attribution.
In the current literature, each type of the four features’ sets
is applied independently from the other, which may other-
wise produce different results (De Vel, 2000). For instance
the word usage and composition style may vary from one
structural pattern to another. In our approach, the write-
prints could be the combination of all the four types of writing
style features. Moreover, the current literature of authorship
d i g i t a l i n v e s t i g a t i o n 5 ( 2 0 0 8 ) S 4 2 – S 5 1 S45attribution suffers from the problem of having too many fea-
tures. It is difficult to determine the set of features that should
be used for a given set of e-mails. Previous research (De Vel,
2000) has shown that adding useless features may decrease
the accuracy because a classifier may capture the useless fea-
tures as noise. Using those noisy features for classification di-
minishes the justification of evidence for supporting the
finding. Some studies identify some particular useful style
markers, but the identified style markers are data dependent
and may not be applicable to other data sets. Our approach
overcomes this limitation by flexibly extracting the evidence
(combinations of frequently occurred features) from the data
itself, provided the insignificant noisy features are filtered out.3. Problem statement
Let {S1,., Sn} be the set of suspected authors of a malicious e-
mail m. We assume that there is a collection of e-mails,
denoted by Ei, for each suspect Si ˛ {S1,., Sn}. The problem of au-
thorship attribution is to identify the most plausible author Sa,
from the suspects {S1,., Sn}, whose collection of e-mails Ea
has the ‘‘best match’’ with the patterns in the malicious e-
mail m. Intuitively, a collection of e-mails Ei matches m if Ei
and m share similar patterns of vocabulary usage, structural
and/or stylometric features. The primary objective of a cyber
forensic investigator is to precisely extract the patterns of
each suspect, so he/she can use such patterns to identify the
author of the malicious e-mail m and present such patterns
as evidence to support his/her findings.
What are the patterns that can represent the ‘‘write-print’’
of a suspect Si? Specifically, we want to extract the patterns
that uniquely represent the writing style of a suspect Si, but
does not represent the writing style of any other suspect Sj,
where i s j. In the rest of this section, we discuss the pre-pro-
cessing of features and formally define the notions of frequent
pattern and write-print.Table 1 – Feature vectors
E-mail Feature A Feature B Feature C
A1 A2 A3 A4 B1 B2 C1 C2
31 0 1 0 0 1 0 1 0
32 0 1 0 0 1 0 1 0
33 0 1 0 0 1 0 1 0
34 1 0 0 0 1 0 1 0
35 0 0 0 1 1 0 1 0
36 0 0 1 0 0 1 0 1
37 0 0 0 1 1 0 0 1
38 0 0 1 0 0 1 0 1
39 0 1 0 0 1 0 0 1
310 1 0 0 0 1 0 0 13.1. Pre-processing
Let Ei be a collection of e-mails written by suspect Si ˛ {S1,.,
Sn}. First, we extract the features from each e-mail in Ei. In
the rest of this section, the term ‘‘feature’’ refers to either a sty-
lometric feature described in Section 2.1 or a word appearing
in the e-mails. The spaces, punctuation, special characters
and blank lines are removed. Next, we discretize each normal-
ized word frequency into a set of intervals, for example,
[0–0.25], (0.25–0.5], (0.5–0.75], (0.75–1]. Each interval is called
a feature item. The normalized feature frequency is then
matched with these intervals. Then assign value 1 to the fea-
ture item if the interval contains the normalized feature
frequency; otherwise assign value 0. This will simplify the
procedure by determining the presence or absence of a pat-
tern. Common discretization techniques are:
 Equal-width discretization, where the size of each interval is
the same.
 Equal-frequency discretization, where each interval has ap-
proximately the same number of records assigned to it. Clustering-based discretization, where clustering is performed
on the distance of neighboring points.
Example 3.1. Consider Table 1, which contains 10 e-mails. We
extracted three features {A, B, C} from the 10 e-mails. We first
discretize each feature into feature items. For example, a stylo-
metric feature A having a normalized range of [0, 1] can be dis-
cretized into four intervals A1¼ [0, 0.25], A2¼ (0.25, 0.5],
A3¼ (0.5, 0.75], A4¼ (0.75, 1], representing four feature items.
Similarly, features B and C are discretized into B1¼ [0, 0.5],
B2¼ (0.5, 1], C1¼ [0, 0.5], and C2¼ (0.5, 1]. An e-mail 31 having
features A¼ 0.3, B¼ 0.25, and C¼ 0.25 can be represented as
feature vector C0, 1, 0, 0, 1, 0, 1, 0D.3.2. Frequent pattern
Intuitively, the ‘‘writing pattern’’ or the ‘‘writing style’’ in an
ensemble of e-mails Ei (written by suspect Si) is a combination
of feature items that frequently occurs in Ei. We concisely
model and capture such frequently occurred patterns by the
concept of frequent itemset (Agrawal et al., 1993) described as
follows.
Let U¼ { f1,., fm} denote the universe of all feature items.
Let Ei be a set of e-mails where each e-mail 3 is represented
as a set of feature items such that 3 4 U. An e-mail 3 contains
a feature item fi if the numerical feature value of the e-mail 3
falls within the interval of fi. For example, e-mail 31 in Table 1
can be represented as a set of feature items 31¼ {A2, B1, C1}.
Table 2 shows the 10 e-mails from Table 1 in this format.
Let F 4 U be a set of feature items called a pattern. An e-mail
3 contains a pattern F if F 4 3. A pattern that contains k feature
items is a k-pattern. For example, the pattern F¼ { f1, f4, f6} is
a 3-pattern. The support of a pattern F is the percentage of
e-mails in Ei that contains F. A pattern F is a frequent pattern
in a set of e-mails Ei if the support of F is greater than or equal
to some user-specified minimum support threshold.
Definition 3.1 (Frequent pattern). Let Ei be the set of e-mails
written by suspect Si. Let support(FjEi) be the percentage of
e-mails in Ei that contain the pattern F, where F 4 U. A pattern
F is a frequent pattern in Ei if support(FjEi)min_sup, where the
minimum support threshold min_sup is a real number in an
interval of [0, 1].
Table 2 – Feature items
E-mail
31¼ {A2, B1, C1}
32¼ {A2, B1, C1}
33¼ {A2, B1, C1}
34¼ {A1, B1, C1}
35¼ {A4, B1, C1}
36¼ {A3, B2, C2}
37¼ {A4, B1, C2}
38¼ {A3, B2, C2}
39¼ {A2, B1, C2}
310¼ {A1, B1, C2}
d i g i t a l i n v e s t i g a t i o n 5 ( 2 0 0 8 ) S 4 2 – S 5 1S46The writing pattern of a suspect Si is represented as a set of
frequent patterns, denoted by FP(Ei)¼ {F1,., Fk}, extracted
from his/her e-mails Ei.
Example 3.2. Consider Table 2. Suppose the user-specified
threshold min_sup¼ 0.3, which means that a pattern
F¼ {f1,., fk} is frequent if at least 3 out of the 10 e-mails con-
tain all feature items in F. {A1} is not a frequent pattern be-
cause it has support 2/10¼ 0.2. {A2} is a 1-frequent pattern
because it has support 0.4. {A2, B1} is a 2-frequent pattern be-
cause it has support 0.4. {A2, B1, C1} is a 3-frequent pattern be-
cause it has support 0.3. Example 4.1 will show how to
efficiently compute all frequent patterns.3.3. Write-print
In forensic science, an individual can be uniquely identified
by his/her fingerprint. In cyber forensics, can we identify
the ‘‘write-print’’ of an individual from his/her e-mails?
We do not claim that the identified write-print in this paper
can uniquely distinguish every individual in the world, but
the identified write-print is accurate enough to uniquely
identify the writing pattern of an individual among the sus-
pects {S1,., Sn} because common patterns among the sus-
pects are filtered out and will not become part of the
write-print.
The notion of frequent patterns in Definition 3.1 captures
the writing pattern of a suspect. However, two suspects Si
and Sj may share some similar writing patterns. Therefore, it
is important to filter out the common frequent patterns and
retain the frequent patterns that are unique to each suspect.
This leads us to the notion of write-print.
Intuitively, a write-print can uniquely represent the writ-
ing style of a suspect Si if its pattern is found only in the e-mails
written by Si, but not in any other suspect’s e-mails. In other
words, the write-print of a suspect Si is a pattern F that is
frequent in the e-mails Ei written by Si but not frequent in
the e-mails Ej written by any other suspect Sj where i s j.
Definition 3.2 (Write-print). A write-print, denoted by WP(Ei),
is a set of patterns where each pattern F has sup-
port(FjEi)min_sup and support(FjEj)<min_sup for any Ej where
i s j, min_sup is a user-specified minimum threshold. In other
words, WP(Ei) 4 FP(Ei), and WP(Ei) X WP(Ej)¼B for any 1 i,
j n and i s j.Discussion: our notion of write-print has two special prop-
erties that make it different from the traditional notion of
write-print in the literature.
First, the combination of feature items that composes the
write-print of a suspect is dynamically generated based on
the embedded pattern in the e-mails. This flexibility allows
us to succinctly model the write-print of different suspects
by using different combinations of feature items. In contrast,
the traditional notion of write-print considers one feature at
a time without considering the combinations.
Second, every frequent pattern F in our notion of write-
print captures a piece of writing pattern that can be found
only in one suspect’s e-mails, but not in any other suspects’
e-mails. The cyber forensic investigator could precisely point
out such matched patterns in the malicious e-mail to support
his/her conclusion of authorship identification. In contrast,
the traditional classifier, e.g., decision tree, attempts to use
the same set of features to capture the write-print of different
suspects. It is quite possible that the classifier would capture
some common writing patterns and the investigator could un-
intentionally use those common patterns to draw the wrong
conclusion of authorship. Our notion of write-print avoids
such problem and, therefore, provides more convincing and
reliable evidence.
3.4. Refined problem statement
The problem of authorship attribution can be refined into
three subproblems: (1) to identify the write-print WP(Ei) from
each set of e-mails Ei ˛ {E1,., Em}. (2) To determine the author
of the malicious e-mail m by matching m with each of
{WP(E1),., WP(Em)}. (3) To extract evidence for supporting
the conclusion on authorship. The evidence has to be intuitive
enough for convincing the judge and the jury in the court of
law. These three subproblems summarize the challenges in
typical investigation procedure.
To solve subproblems (1) and (2), we can first extract the set
of frequent patterns FP(Ei) from Ei and then filter out the com-
mon frequent patterns that also appear in any other sets of e-
mails Ej. For subproblem (3), the write-print WP(Ea) could serve
the evidence for supporting the conclusion, where Ea is the set
of e-mails written by the identified author Sa.4. Our method
Algorithm 1 presents a novel data mining method, called
AuthorMiner, for determining the authorship of a malicious
e-mail m from a group of suspects {S1,., Sn} based on the
extracted features of their previously written e-mails {Ei,.,
En}. In this section, an e-mail is represented by a set of feature
items. Below, we summarize the algorithm in three phases.
Sections 4.1–4.3 discuss each phase in detail.
Phase 1: Mining frequent patterns (lines 1–3). Extract the frequent
patterns FP(Ei) from each collection of e-mails Ei writ-
ten by suspect Si. The extracted frequent patterns
capture the writing pattern of a suspect.
Phase 2: Filtering common frequent patterns (lines 4–16). Though
FP(Ei) has captured the writing patterns of suspect
Algorithm 1: AuthorMiner
Require: The malicious e-mail m.
Require: A set of e-mail {E1,., En}, written by {S1,., Sn}.
/* Mining frequent patterns */
1: for each Ei ˛ {E1,., En} do
2: extract frequent patterns FP(Ei) from Ei;
3: End for
/* Filtering out common frequent patterns */
4: for each FP(Ei) ˛ {FP(E1),., FP(En)} do
5: for each FP(Ej) ˛ {FP(Eiþ1),., FP(En)} do
6: for each frequent pattern Fx ˛ FP(Ei) do
7: for each frequent pattern Fy ˛ FP(Ej) do
8: if Fx¼¼ Fy then
9: FP(Ei)¼ FP(Ei) Fx;
10: FP(Ej)¼ FP(Ej) Fy;
11: End if
12: End for
13: End for
14: End for
15: WP(Ei)¼ pattern(Ei);
16: End for
/* Identifying author */
17: highest_score¼1.0;
18: For all WP(Ei) ˛ {WP(E1),., WP(En)} do
19: if Score(m z WP(Ei))> highest_score then
20: highest_score¼ Score(m z WP(Ei));
21: author¼ Si;
22: End if
23: End for author;
d i g i t a l i n v e s t i g a t i o n 5 ( 2 0 0 8 ) S 4 2 – S 5 1 S47Si, FP(Ei) may contain frequent patterns that are com-
mon to other suspects. Therefore, Phase 2 is to
remove the common frequent patterns. Specifically,
a frequent pattern F in FP(Ei) is removed if any other
FP(Ej) also contains F, where i s j. The remaining fre-
quent patterns in FP(Ei) form the write-print WP(Ei) of
suspect Si. When this phase completes, we have a set
of write-prints {WP(E1),., WP(En)} of suspects {S1,.,
Sn}. Fig. 1 illustrates that the write-print WP(E2) comes
from FP(E2) and filters out the common patterns by
comparing with FP (E1) and FP(E3).
Phase 3: Identifying author (lines 17–24). Compare the malicious
e-mail m with each write-print WP(Ei) ˛ {WP(E1),.,
WP(En)} and identify the most similar write-print
that matches m. Intuitively, a write-print WP(Ei) is
similar to the e-mail m if many frequent patterns in
WP(Ei) can be found in m. Our insight is that the fre-
quent patterns are not equally important. Their im-
portance is reflected by their supprt(FjEi); therefore,
we derive a score function Score(m z WP(Ei)) to mea-
sure the weighted similarity between the e-mail m
and the frequent patterns in WP(Ei). The suspect Sa
of write-print WP(Ea), which has the highest
Score(m z WP(Ei)), is classified to be the author of the
malicious e-mail m.4.1. Mining patterns (lines 1–3)
Lines 1–3 mine the frequent patterns FP(Ei) from each collec-
tion of e-mail Ei ˛ {E1,., En}, for 1 i n}. There are many
data mining algorithms for extracting frequent patterns, for
example, Apriori (Agrawal et al., 1993), FP-growth (Han andPei, 2000), and ECLAT (Zaki, 2000). Below, we provide an over-
view of the Apriori algorithm which has been previously ap-
plied to various text mining tasks (Fung et al., 2003; Holt and
Chung, 1999).
Apriori is a level-wise iterative search algorithm that uses
frequent k-patterns to explore the frequent (kþ 1)-patterns.
First, the set of frequent 1-patterns is found by scanning the e-
mail Ei, accumulating the support count of each feature item,
and collecting the feature item f’s that has support({f}jEi)min_
sup. The resulting frequent 1-patterns are then used to find
frequent 2-patterns, which are then used to find frequent 3-pat-
terns, and so on, until no more frequentk-patternscan be found.
The generation of frequent kþ 1-pattern from frequent k-pat-
terns is based on the following Apriori property.
Property 4.1 (Apriori property). All nonempty subsets of a fre-
quent pattern must also be frequent.
By definition, a pattern F0 is not frequent if sup-
port(F0jEi)<min_sup. The above property implies that adding
a feature item f to a non-frequent pattern F0 will never make
it more frequent. Thus, if a k-pattern F0 is not frequent, then
there is no need to generate (kþ 1)-pattern F0 W f because
F0 W f is also not frequent. The following example shows
how the Apriori algorithm exploits this property to efficiently
extract all frequent patterns. Refer Agrawal et al. (1993) for
a formal description.
Example 4.1. Consider Table 2 with min_sup¼ 0.3. First, iden-
tify all frequent 1-patterns by scanning the database once to
obtain the support of every item. The items having
support 0.3 are frequent 1-patterns, denoted by L1¼ {{A2},
{B1}, {C1}, {C2}}. Then, join L1 with itself, i.e. L1 ) L1, to generate
the candidate set C2¼ {{A2, B1}, {A2, C1}, {A2, C2}, {B1, C1}, {B1,
C2}, {C1, C2}} and scan the database once to obtain the support
of every pattern in C2. Identify the frequent 2-patterns,
denoted by L2¼ {{A2, B1}, {A2, C1}, {B1, C1}, {B1, C2}}. Similarly,
perform L2 ) L2 to generate C3 scan the database once to iden-
tify the frequent 3-pattern which is L3¼ {{A2, B1, C1}}. The find-
ing of each set of frequent k-patterns requires one full scan of
the e-mail feature items in Table 2.4.2. Filtering common patterns (lines 4–16)
This phase filters out the common frequent patterns among
{FP(E1),., FP(En)}. Lines 4–16 in Algorithm 1 describe the filter-
ing procedure. The general idea is to compare every frequent
pattern Fx in FP(Ei) with every frequent pattern Fy in all other
FP(Ej), and to remove them from FP(Ei) and FP(Ej) if Fx and Fy
are the same. The computational complexity of this step is
O(jFP(E )jn), where jFP(E )j is the number of frequent patterns
in FP(E ) and n is the number of suspects. The remaining
frequent patterns in FP(Ei) form the write-print WP(Ei) of
suspect Si.
Example 4.2. Suppose there are three suspects S1, S2, and S3
having three sets of e-mails E1, E2, and E3 respectively, as
depicted in Fig. 1. Let FP(E1)¼ {{A1}, {B1}, {C2}, {A1, B1}, {A1, C2},
{B1, C2}, {A1, B1, C2}} be the frequent patterns of S1. Let
0
20
40
60
80
100
A
c
c
u
r
a
c
y
 
(
%
)
min_sup
0
20
40
60
80
100
A
c
c
u
r
a
c
y
 
(
%
)
min_sup
0
20
40
60
80
100
0.1 0.3 0.5 0.7 0.9 0.1 0.3 0.5 0.7 0.9 0.1 0.3 0.5 0.7 0.9
A
c
c
u
r
a
c
y
 
(
%
)
min_sup
a b c
Fig. 2 – Accuracy vs. min_sup (n [ 6, m [ 20). (a) Number of discretized intervals [ 2; (b) number of discretized intervals [ 4
(c) number of discretized intervals [ 6.
d i g i t a l i n v e s t i g a t i o n 5 ( 2 0 0 8 ) S 4 2 – S 5 1S48FP(E2)¼ {{A2}, {B1}, {C1}, {C2}, {A2, B1}, {A2, C1}, {B1, C1}, {B1, C2},
{A2, B1, C1}} be the set of frequent patterns from Example 4.1
of S2. Let FP(E3)¼ {{A1}, {B3}, {C2}, {A1, B3}, {A1, C2}, {B3, C2}, {A1,
B3, C2}} be the set of frequent patterns of S3. Then, we discard
{A1}, {B1}, {C2}, {A1, C2}, {B1, C2} because more than one set of fre-
quent patterns contains them. The remaining frequent pat-
terns form the write-print of the suspect: WP(E1)¼ {{A1, B1},
{A1, B1, C2}}, WP(E2)¼ {{A2}, {C1}, {A2, B1}, {A2, C1}, {B1, C1}, {A2,
B1, C1}}, and WP(E3)¼ {{B3}, {A1, B3}, {B3, C2}, {A1, B3, C2}}.1 http://www.cs.cmu.edu/wenron/.4.3. Identifying author (lines 17–24)
Lines 17–24 determine the author of the malicious e-mail m by
comparing m with each write-print WP(Ei) ˛ {WP(E1),., WP(En)}
and identifying the most similar write-print to m. Intuitively,
a write-print WP(Ei) is similar to m if many frequent patterns
in WP(Ei) matches the style in m. Formally, a frequent pattern
F matches m if m contains every feature item in F.
Eq. (1) shows the score function that quantifies the similar-
ity between the malicious e-mail m and a write-print WP(Ei).
The frequent patterns are not equally important, and their im-
portance is reflected by their support in Ei, i.e., the percentage
of e-mails in Ei sharing such combination of features. Thus,
the score function accumulates the support of a frequent pat-
tern and divides the result by the number of frequent patterns
in WP(Ei) to normalize the factor of different sized WP(Ei).
ScoreðmzWPðEiÞÞ ¼
Pp
j¼1 support

MPj
Ei

jWPðEiÞj
(1)
where MP¼ {MP1,., MPp} is a set of matched patterns between
WP(Ei) and the malicious e-mail m. The score is a real number
within the range of [0, 1]. The higher the score means the
higher similarity between the write-print and the malicious
e-mail m. The suspect having the write-print with the highest
score is the author of the malicious e-mail m.
Example 4.3. Let thepatternsfound inthemaliciouse-mailm be
{A2, B1, C1} and {A1, B1, C2}. Comparing them to the write-prints
in Example 4.2, we notice that the first pattern matches to a pat-
tern in WP(E2) while the second pattern matches to a pattern in
WP(E1). The score calculated according to Eq. (1) is higher for
WP(E1) because jWP(E1)j< jWP(E2)j. As a result, the malicious e-
mail m is most similar to WP(E1), suggesting that S1 is the author.In an unlikely case where multiple suspects have the same
highest score, we return all of them to the user.5. Experimental evaluation
Our goals in this section are to evaluate the proposed method,
AuthorMiner, in terms of authorship identification accuracy
and to verify if the extracted write-print exhibits strong evi-
dence for supporting the conclusion on authorship. We
employed the Enron E-mail Dataset,1 which contains 200,399
real-life e-mails from 158 employees of the Enron corporation
after cleaning. As a pre-processing step, we removed the
empty spaces, special characters, and blank lines and toke-
nized the e-mails as described in Section 3.1. Unlike the ordi-
nary text mining application which aims at extracting the
general trends in the text, our goal is to differentiate the writ-
ing style of different suspects. Therefore, we keep all the func-
tion words and short words.
To evaluate the authorship identification accuracy of our
method, we randomly select n employees from the Enron E-
mail Dataset, representing n suspects {S1,., Sn}. For each sus-
pect Si, we choose m of Si’s e-mails, where 2/3 of the m e-mails
are for training and the remaining 1/3 of the m e-mails are for
testing. We then applied our method, AuthorMiner, to extract
the write-prints from {S1,., Sn} from the training set and then
determine the author of each e-mail in the testing set. The au-
thorship identification accuracy is measured by the percent-
age of correctly matched authors in the testing set.
Fig. 2 depicts the authorship identification accuracy for
n¼ 6 and m¼ 20 (i.e., a total of 120 e-mails) on different num-
ber of discretized intervals. The accuracy spans from 86% to
90% at min_sup¼ 0.1, 0.3 and 0.5, suggesting that our proposed
method can effectively identify the author of an e-mail based
on the extracted write-prints when a reasonable min_sup is
specified. As min_sup increases, the number of extracted fre-
quent patterns, i.e. jFP(Ei)j, decreases and the extracted fre-
quent patterns tend to capture the general writing style that
is common to other suspects, thus, are likely to be eliminated
by the filtering process of our method. As a result, the write-
print becomes less effective for authorship identification and
the accuracy decreases.
60
65
70
75
80
85
90
95
2 4 6
A
c
c
u
r
a
c
y
 
(
%
)
Number of Intervals
min_sup = 0.1
min_sup = 0.3
min_sup = 0.5
min_sup = 0.7
min_sup = 0.9
Fig. 3 – Accuracy vs. number of intervals (n [ 6, m [ 20).
d i g i t a l i n v e s t i g a t i o n 5 ( 2 0 0 8 ) S 4 2 – S 5 1 S49Fig. 2 illustrates that the accuracy spans from 70% to 90%
for 2 intervals, from 66% to 90% for 4 intervals, and from
73% to 90% for 6 intervals. Though we are testing a broad range
of min_sup, the accuracy is relatively stable. These results sug-
gest that our method is very robust to different user-specified
min_sup. In the effort to study the effect of how the number of
discretized intervals could on the accuracy, we measure the
authorship identification accuracy with respect to the number
of intervals. Fig. 3 also suggests that our method is very robust
to different number of intervals.
Fig. 4 depicts the authorship identification accuracy for
n¼ 10 and m¼ 10 (i.e., a total of 100 e-mails) on different num-
ber of discretized intervals. The accuracy spans from 80% to
90% at min_sup¼ 0.1 and 0.3, suggesting that our proposed
method can effectively identify the author of an e-mail based
on the extracted write-prints when a reasonable min_sup is
specified. As min_sup increases, the accuracy decreases as
explained before.
Fig. 4 illustrates that the accuracy spans from 66% to 83%
for 2 intervals, from 63% to 83% for 4 intervals, and from
66% to 90% for 6 intervals. Though we are testing a broad range0
20
40
60
80
100
A
c
c
u
r
a
c
y
 
(
%
)
min_sup
0
20
40
60
80
100
0.1 0.3 0.5 0.7 0.9 0.1 0.3
A
c
c
u
r
a
c
y
 
(
%
)
m
a b
Fig. 4 – Accuracy vs. min_sup (n [ 10, m [ 10). (a) Number of disc
(c) number of discretized intervals [ 6.of min_sup, the accuracy is relatively stable. These results sug-
gest that our method is very robust to different user-specified
min_sup. In the effort to study the effect of how the number of
discretized intervals could on the accuracy, we measure the
authorship identification accuracy with respect to the number
of intervals. Fig. 5 also suggests that our method is very robust
to different number of intervals.
Comparing Figs. 2 and 4, we notice that the authorship
identification accuracy drops from the average of 80.5% in
Fig. 2 to the average of 77% in Fig. 4. Though there is a drop
in accuracy, the drop is relatively small compared to the in-
crease of suspects from 6 to 10. Most of traditional classifiers
would have a very significant drop as the number of target
classes (suspects) increases.
In additional to measuring the quality of write-print using
authorship identification accuracy, we also manually exam-
ined the extracted write-print and found that frequent pat-
terns can succinctly capture combinations of features that
occur frequently in the suspect’s e-mails. Many of those hid-
den patterns are not obvious. Due to the fact that all the
matched frequent patterns can be found in the anonymous
(malicious) e-mail, the frequent patterns themselves serve
as a strong evidence for supporting the conclusion on
authorship.6. Conclusion
In this paper, we formally define the problem of authorship at-
tribution and refine the problem into three subproblems: (1) to
identify the write-print of each suspect. (2) To determine the
author of the malicious e-mail. (3) To extract evidence for sup-
porting the conclusion on authorship. Generally, the same
three phased methodology is applied in the court of law for re-
solving the attribution issue. Most previous contributions fo-
cused on improving the classification accuracy of authorship
identification, but only very few of them study how to gather
strong evidence for the court of law.
We introduce a novel approach of authorship attribution
and formulate a new notion of write-print based on the con-
cept of frequent patterns. Unlike the write-prints in previous
literature that are a set of predefined features, our notion of
write-print is dynamically extracted from the data as combi-
nations of features that occur frequently in a suspect’s0
20
40
60
80
100
A
c
c
u
r
a
c
y
 
(
%
)
min_sup
0.1 0.3 0.5 0.7 0.90.5 0.7 0.9
in_sup
c
retized intervals [ 2; (b) number of discretized intervals [ 4
60
65
70
75
80
85
90
95
2 4 6
A
c
c
u
r
a
c
y
 
(
%
)
Number of Intervals
min_sup = 0.9
min_sup = 0.1
min_sup = 0.3
min_sup = 0.5
min_sup = 0.7
Fig. 5 – Accuracy vs. number of intervals (n [ 10, m [ 10).
d i g i t a l i n v e s t i g a t i o n 5 ( 2 0 0 8 ) S 4 2 – S 5 1S50e-mails, but not frequently in other suspect’s e-mails. The
experimental results on real-life e-mail dataset suggest that
the identified write-print does not only help identify the
author of an anonymous e-mail, but also presents intuitive
yet strong evidence for supporting the authorship finding.
This novel approach opens up a new promising direction of
authorship attribution. We will further extend our tool to
adopt different types of stylometric features and utilize the
concept of frequent pattern to identify hidden write-print of
individuals for the purpose of e-mail forensics. Similarly,
more interesting results can be obtained by using the pro-
posed approach on real e-mail traffic containing malicious e-
mails.Acknowledgments
The research is supported in part by the Discovery Grants
(356065-2008) from the Natural Sciences and Engineering Re-
search Council of Canada (NSERC), and the Faculty Start-up
Funds from Concordia University.r e f e r e n c e s
Abbasi A, Chen H. Writeprints: a stylometric approach to identity-
level identification and similarity detection in cyberspace.
ACM Transactions on Information Systems March 2008;26(2).
Agrawal R, Imielinski T, Swami A. Mining association rules
between sets of items in large databases. ACM SIGMOD Record
June 1993;22(2):207–16.
Burrows J. An ocean where each kind: statistical analysis and
some major determinants of literary style. Computers and the
Humanities August 1989;23(4–5):309–21.Corney M, De Vel O., Anderson A, G. Mohay. Gender-preferential
text mining of e-mail discourse. In: 18th annual computer
security applications conference (ACSAC); 2002.
Cristianini N, Shawe-Taylor J. An introduction to support vector
machines. UK: Cambridge University Press; 2000.
De Vel O. Mining e-mail authorship. Paper presented at the
workshop on text mining. In: ACM international conference
on knowledge discovery and data mining (KDD); 2000.
De Vel O, Anderson A, Corney M, Mohay G. Mining e-mail content
for author identification forensics. SIGMOD Record 2001a;
30(4):55–64.
De Vel O, Anderson A, Corney M, Mohay G. Multi-topic e-mail
authorship attribution forensics. In: ACM conference on
computer security – Workshop on data mining for security
applications; November 2001b.
Fung CM, Wang K, Ester M. Hierarchical document clustering
using frequent itemsets. In: Proceedings of the third SIAM
international conference on data mining (SDM); May 2003.
p. 59–70.
Haltern HV. Author verification by linguistic profiling: an
exploration of the parameter space. ACM Transactions on
Speech and Language Processing January 2007;4(1).
Han J, Pei J. Mining frequent patterns by pattern-growth:
methodology and implications. ACM SIGKDD Explorations
Newsletter 2000;2(2).
Holmes I. The evolution of stylometry in humanities. Literary and
Linguistic Computing 1998;13(3):111–7.
Holmes I, Forsyth RS. The federalist revisited: new directions in
authorship attribution. Literary and Linguistic Computing
1995;10(2):111–27.
Holt JD, Chung SM. Efficient mining of association rules in text
databases. In: Proceedings of the eighth ACM international
conference on information and knowledge management
(CIKM). Kansas City, Missouri, United States; 1999. p. 234–42.
Ledger GR, Merriam TVN. Shakespeare, fletcher, and the two noble
kinsmen. Literary and Linguistic Computing 1994;9:235–48.
Mendenhall TC. The characteristic curves of composition.
Science 1887;11(11):237–49.
Quinlan JR. Induction of decision trees. Machine Learning 1986;
1(1):81–106.
Teng G-F, Lai M-S, Ma J-B, Li Y. E-mail authorship mining based
on SVM for computer forensic. In: Proceedings of the third
international conference on machine learning and
cyhemetics. Shanghai, China; August 2004.
Tweedie J, Baayen RH. How variable may a constant be? measures
of lexical richness in perspective. Computers and the
Humanities 1998;32:323–52.
Yule G. On sentence length as a statistical characteristic of style
in prose. Biometrika 1938;30:363–90.
Yule G. The statistical study of literary vocabulary. Cambridge,
UK: Cambridge University Press; 1944.
Zaki MJ. Scalable algorithms for association mining. IEEE
Transactions of Knowledge and Data Engineering (TKDE) 2000;
12:372–90.
Zheng R, Li J, Chen H, Huang Z. A framework for authorship
identification of online messages: writing-style features and
classification techniques. Journal of the American Society for
Information Science and Technology 2006;57(3):378–93.
Zheng R, Qin Y, Huang Z, Chen H. Authorship analysis in
cybercrime investigation. In: Proceedings of the first
international symposium on intelligence and security
informatics (ISI); 2003.
Farkhund Iqbal is a Ph.D. candidate in the Faculty of Electrical
and Computer Engineering (ENCS), Concordia University,
Montreal. His Ph.D. topic is E-mail Forensics with special
focus on addressing e-mail anonymity issues with the help
of analyzing e-mail social networks. He is an active member
d i g i t a l i n v e s t i g a t i o n 5 ( 2 0 0 8 ) S 4 2 – S 5 1 S51of Computer Security Laboratory (CSL) and cyber forensic
team at Concordia Institute for Information Systems Engi-
neering (CIISE). The forensic team is working on designing
and implementing state-of-the-art Cyber Forensic Analysis
Framework. His research interests include cyber crime analy-
sis, E-mail crimes analysis, social network analysis, author-
ship analysis, data mining and privacy.
Rachid Hadjidj is a post Doctoral fellow at Concordia Univer-
sity working on software security and computer forensics.
He got his Ph.D. degree in 2006 from l’Ecole polytechnic de
Montreal where he worked on the formal validation of real
time systems. Some of his main fields of interest are: Real
time systems, System engineering, Hardware and Software
verification, and Formal methods.
Benjamin Fung is an Assistant Professor of the Concordia In-
stitute for Information Systems Engineering (CIISE) at Concor-
dia University. He received the Ph.D. degree in Computing
Science from Simon Fraser University, Canada. In the past,
he worked at Business Objects Inc. and designed reporting
systems for various Enterprise Resource Planning (ERP) and
Customer Relationship Management (CRM) systems. His cur-
rent research interests include data mining, database, privacy
preservation, information security, and digital forensics, as
well as their applications in emerging technologies. He has
published in data engineering, data mining, and security con-
ferences, journals, and books, including ACM SIGKDD, IEEE
TKDE, IEEE ICDE, IEEE ICDM, IEEEISI, EDBT, SIAM SDM, KAIS.
He serves as an editorial board member for IJDATS, and a pro-
gram committee member for ACM SIGKDD, ACM CIKM, and
SIAM SDM. His research has been supported in part by theDiscovery Grants from Natural Sciences and Engineering Re-
search Council of Canada (NSERC) and Faculty Start-up Funds
from Concordia University.
Dr. Mourad Debbabi is a Full Professor and the Director of the
Concordia Institute for Information Systems Engineering, Con-
cordia University, Montreal, Quebec, Canada. He holds the Con-
cordia Research Chair Tier I in Information Systems Security. He
is the founder and one of the leaders of the Computer Security
Laboratory (CSL) at Concordia University. He is the Specification
Lead of four Standard JAIN (Java Intelligent Networks) Java Spec-
ification Requests (JSRs) dedicated to the elaboration of standard
specifications for presence and instant messaging. In the past,
he served as Senior Scientist at the Panasonic Information and
Network Technologies Laboratory, Princeton, New Jersey, USA;
Associate Professor at the Computer Science Department of
Laval University, Quebec, Canada; Senior Scientist at General
Electric Research Center, New York, USA; Research Associate
at the Computer Science Department of Stanford University,
California, USA; and Permanent Researcher at the Bull
Corporate Research Center, Paris, France. Dr. Debbabi holds
Ph.D. and M.Sc. degrees in computer science from Paris-XI Or-
say, University, France. He published more than 130 research
papers in journals and conferences on computer security, for-
mal semantics, Java security and acceleration, cryptographic
protocols, malicious code detection, programming languages,
type theory and specification and verification of safety-critical
systems. He supervised to completion more than 50 graduate
students at M.Sc. and Ph.D. levels. He can be reached at
debbabi@ciise.concordia.ca <https://mail.encs.concordia.ca/
horde/imp/message.php?index=15693>. His webpage is at
<http://www.ciise.concordia.ca/~debbabi>
