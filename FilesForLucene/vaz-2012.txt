Stylometric Relevance-feedback towards a Hybrid Book
Recommendation Algorithm
Paula Cristina Vaz
INESC-ID/IST
Rua Alves Redol, 9
1000–029 Lisbon
Portugal
paula.vaz@inesc-id.pt
David Martins de Matos
INESC-ID/IST
Rua Alves Redol, 9
1000–029 Lisbon
Portugal
david.matos@inesc-id.pt
Bruno Martins
IST/INESC-ID
Av. Prof. Cavaco Silva
2780–990 Porto Salvo
Portugal
bruno.martins@ist.utl.pt
ABSTRACT
Reading is an important activity for individuals. Content-
based recommendation systems are, typically, used to rec-
ommend scientific papers or news, where search is driven by
topic. Literary reading or reading for leisure differs from
scientific reading, because users search books not only for
their topic but also by author or writing style. Choosing a
new book to read can be tricky and recommendation sys-
tems can make it easy by selecting books that the user will
like. In this paper we study recommendation through writ-
ing style and the influence of negative examples in user pref-
erences. Our experiments were conducted in a hybrid set-
up that combines a collaborative filtering algorithm with
stylometric relevance feedback. Using the LitRec data set,
we demonstrate that writing style influences book selection;
that book content, characterized with writing style, can be
used to improve collaborative filtering results; and that neg-
ative examples do not improve final predictions.
Categories and Subject Descriptors
H.3.3 [Information systems]: Relevance-feedback; H.3.7
[Information storage and retrieval]: Digital Libraries
Keywords
Book recommendation, Recommendation Systems, Relevance-
feedback, Stylometry
1. INTRODUCTION
With the amount of literary publications available, there is
an increased need for systems to help users choosing books.
This systems must suggest literary works that match users
personal tastes. Recommendation systems emerged from the
Information Retrieval field to deal with this type of issues.
Two main techniques are used to develop recommenda-
tion systems [1]. Content-based (CB) techniques [10] and
collaborative filtering (CF) techniques [17]. Each technique
Permission to make digital or hard copies of all or part of this work for
personal or classroom use is granted without fee provided that copies are
not made or distributed for profit or commercial advantage and that copies
bear this notice and the full citation on the first page. To copy otherwise, to
republish, to post on servers or to redistribute to lists, requires prior specific
permission and/or a fee.
BooksOnline’12, October 29, 2012, Maui, Hawaii, USA.
Copyright 2012 ACM 978-1-4503-1714-6/12/10 ...$10.00.
has limitations when taken individually, such as limited con-
tent analysis, new item problem, sparsity, among others. To
address these limitations, hybrid recommender systems [4]
have been purposed where CB and CF techniques are com-
bined in order to overcome the limitations of each technique.
Literary reading differs from scientific reading, because,
with few exceptions, readers want books that they like and
not just books that are related to certain topics. Typical CB
approaches use topics or semantic relatedness to find similar
documents. Moreover, newly published books do not have
sufficient ratings to be captured by CF. This is also the
case of books that are not recent, but have small amount of
ratings.
This research work has two main goals: (a) to assess if
stylometric features can improve literary book recommen-
dations, and (b) to assess if negative examples, i.e., books
that the user did not like, can improve recommendations.
To fulfill the objectives, we use a hybrid set-up that com-
bines CF with CB filtering. The CF algorithm makes predic-
tions based in the k-Nearest-Neighbor (kNN) approach and
is used to establish the baseline. The Rocchio algorithm [13]
gave the authors a test framework to study the effect of sty-
lometric features and the influence of negative examples in
predictions.
In Section 2, we talk about related work on hybrid systems
and book recommendation. In Section 3, we describe our
model. Section 4 describes and discusses the experimental
set-up. Finally, in Section 5, we conclude and point to future
work directions.
2. RELATED WORK
Work has been done in hybrid recommender systems by
combining CB and CF techniques. [9] proposed an approach
that combines the content of items and item-based CF using
a clustering technique. [12] proposed a framework that com-
bines collaborative, CB and demographic filtering for rec-
ommending information sources such as Web pages or news
articles. [8] proposed a CF recommender system combined
with self oriented maps. [6] proposed a hybrid recommender
system using Boltzmann Machines, which are probabilistic
models that combine both CB and CF techniques. [5] uses a
sigmoid function to combine predictions from CF, CB filter,
and a demographic filter. [18] combines RF with CF to
recommend Wikipedia articles. Fab [2] uses Rocchio’ s algo-
rithm to learn tf− idf vectors that are the average of highly
rated documents. Other works on hybrid recommender sys-
tems can be found in [4] and [5].
13
Work has also been done in book recommendation. There
are several book recommendation sites that can be found
on the Internet. Of these, we highlight: gnooks1 (can rec-
ommend books and authors; gnooks includes a “literature
map” that graphically shows authors read together); Sim-
ilar authors2 (shows lists of authors similar to the author
given by the user); BookLamp3 (defines the “book DNA”
where author information is included and is used to find
similar books). In [7], the author investigates the effective-
ness of author rankings in a library catalog to improve book
retrieval. [11] makes book recommendation using text cate-
gorization over Amazon book pages.
3. OUR MODEL
According to recommendation systems literature [1, 17],
typically, CF algorithms outperform CB filtering, but both
techniques have shortcomings. Results from each technique
are often improved through hybrid approaches. Following
this reasoning, we combined a CF algorithm with a CB filter.
In this section, we describe the model.
3.1 Collaborative filtering algorithm
For our baseline, we implemented an item-based CF al-
gorithm using the kNN approach [14]. This technique has
been extensively used in recommendation research. Our al-
gorithm registers the items that were preferred together and
calculates the similarity between these items using the Pear-
son correlation (Equation 1).
s(i1, i2) =
∑
u(ru,i1 − ru,i1)(ru,i2 − ru,i2)√∑
u(ru,i1 − ru,i1)2
√∑
u(ru,i2 − ru,i2)2
(1)
where ru,i denotes the rating of user u on item i and ru,i is
the average rating of the the ith item.
Predictions for item i for the user u are generated, first
selecting the kNN and then, using the weighted sum in Equa-
tion 2.
Pu,i =
∑k
j s(i, j) ∗ ru,i
Nu
(2)
where s(i, j) is the similarity between items i and j (Equa-
tion 1), ru,i denotes the rating of user u on item i, Nu is the
number of items in user u profile, and k is the number of
items similar to item i. Item i is an item not rated by user
u.
3.2 Content-based filtering
CB methods make recommendations by analyzing item
content and looking for items with content similar to items
that have been highly rated by the user. Typically, docu-
ments are represented by the most significant words.
In our model, we explore stylometric features. Stylomet-
ric features represent document writing style and have been
used with success in authorship attribution applications [16].
The intuition behind the choice of these features is that read-
ers often choose books by their authors. Stylometric features
implicitly select books by the same author without needing
meta-data. This is an advantage, because meta-data gen-
eration is cumbersome and time consuming. Moreover, sty-
lometric features can retrieve authors with similar writing
1http://www.gnooks.com/
2http://www.similarauthors.com/
3http://booklamp.org/
style. In our CB algorithm we used vocabulary richness,
document size, Part-of-Speech-tag (POST) bi-grams, and
most-frequent-words.
The algorithm was used with two document representa-
tions: (a) normalized vectors of vocabulary richness, docu-
ment size, and POST bi-grams; (b) topics of most-frequent-
words obtained by applying LDA [3] to raw documents. The
reason behind the use of LDA lies in the fact that LDA finds
patterns of word occurrences in documents, naturally select-
ing the most frequent words in documents and has been used
in other authorship attribution works (e.g., [15]). According
to [16], authors can be characterized by the patterns found
in the use of most-frequent-words (typically, stop-words).
Most-frequent-word frequency vectors have been used with
success in authorship attribution.
The Rocchio RF algorithm was applied to the different
book representations to assess which features are important
to the literary reader. The reason to choose Rocchio’s algo-
rithm was to be able to study the influence of poorly rated
books in the rating prediction. Rocchio’s algorithm repre-
sents users profile as shown in Equation 3. Similar doc-
uments are found calculating the cosine between the user
vector ~u and item vectors.
~u = β
∑|POS|
i=1 ~pi
|POS| − γ
∑|NEG|
i=1 ~ni
|NEG| (3)
In Equation 3, ~u is the vector representing the user. ~pi
and ~ni are feature vectors that represent the i
th positive
and negative examples. POS and NEG are sets of positive
and negative examples. β and γ are the weights given to
the positive and negative examples. Positive examples are
documents that were highly rated by the user and negative
examples are documents that the user poorly rated.
3.3 Combining predictions
Final predictions are obtained by combining CF and RF
algorithms. Each algorithm makes predictions independently.
They are then combined using prediction average, as shown
in Equation 4.
Pu,i =
cfu,i + rfu,i
2
(4)
where cfu,i and rfu,i are the ratings predicted for user u on
item i by the CF and the RF algorithm, respectively.
4. EXPERIMENTS
In this section, we first describe the data set and the ex-
perimental study. First, we present the data set, then the
evaluation metric, and, finally, the results obtained in the
experiments with stylometric features.
4.1 Experimental data set
To evaluate the algorithm we used LitRec [19]. LitRec
is a literary data set built for recommendation purposes.
It combines documents from Project Gutenberg4 with rat-
ings from Goodreads5. The data set contains 38,582 ratings
from 1,927 users and 3,709 documents. The data set con-
tains user, book, rating, rating date, and document content.
Documents are lemmatized and POS-tagged. The rating
4http://www.gutenberg.org/
5http://www.goodreds.com/
14
date was used to sort and divide ratings in a train-test set
of 90%-10%.
Books are rated in a 1-5-scale. For this work, we consid-
ered the 0-rated books as not rated; 1-2-rated books as neg-
ative examples, i.e, books that the user did not like; 3-rated
books as neutral; and 4-5-rated books as positive examples,
i.e., books that users really liked.
4.2 Evaluation measure
We used the Root Mean Square Error (RMSE) to mea-
sure prediction accuracy (Equation 5), where Oi and Pi
represent, respectively, the observed rating and prediction
for item i.
RMSE(O,P ) =
√∑n
i=1(Oi − Pi)2
n
(5)
The RMSE computes how close the predictions based in the
training-set are to the observed values contained in the test-
set.
4.3 Collaborative filter
As the CF algorithm used is based on kNN approach,
we first determine the best neighborhood. To determine
the k neighbor items that return the best predictions we
varied k between 20 and 100 and measure the RMSE for
each k. For LitRec, the best predictions are achieved with
a neighborhood size of 53 items (RMSE = 0.534).
4.4 Negative vs. positive examples
As explained in section 3.2, we used stylometric RF to
assess the influence of books that the user did not like. The
algorithm represents books as feature vectors and calculates
user vectors according to Equation 3. Similar books are
retrieved using the cosine similarity. We varied β and γ
between 0 and 1, but for simplicity only present results for
0, 0.5, and 1.
Table 1 (a) shows RMSE for normalized vectors. RMSE
decreases with the descending of parameter γ. Best results
are achieved when γ = 0 (RMSE = 0.745).
(a) (b)
Normalized vectors Most-frequent-words
β β
0 0.5 1 0 0.5 1
γ
0 ∞ 0.745 0.745 ∞ 0.683 0.683
0.5 ∞ 0.781 0.750 ∞ 0.707 0.756
1 ∞ 0.829 0.781 ∞ 0.866 0.707
Table 1: RMSE variation for (a) normalized vectors
of POST bi-gram frequencies, vocabulary richness,
and document size; and for (b) most-frequent-words
topics.
Table 1 (b) shows RMSE for most-frequent-words topics.
Although RMSE generally decreases when positive and neg-
ative contributions are equal (β = γ), the best RMSE is also
achieved when γ = 0 (RMSE = 0.683). Results show that
topics outperform normalized vectors.
We also combined all the features in a single normalized
vector. Results are equal to the ones obtained with topics,
which means that, when used together, the other stylometric
features are redundant
4.5 Combining predictions
To combine predictions from both algorithms the out-
comes were averaged. Figure 1 shows RMSE after averag-
ing predictions from CF and RF (using only positive exam-
ple). Results show that most-frequent-words topics improve
CF performance in predicting user literary tastes (RMSE =
0.482).
Figure 1: RMSE variation for the hybrid approach.
4.6 Discussion
Results denote that literary choices are influenced by writ-
ing style and that stylometric features can be used to im-
prove recommendations. Writing style is associated with
book author and is used in authorship attribution applica-
tions. Thus, when the algorithm retrieves similar documents
using stylometric features it is implicitly retrieving same-
author documents. This agrees with the work presented
in [19] where two CF algorithms are combined to make au-
thor and book recommendations. Author recommendation
is used to improve book recommendation.
Results presented in the previous section have shown that
negative examples worsen Rocchio’s algorithm RMSE. This
may be explained by the fact that negative examples displace
user centroids to a dislike zone in the vector space.
Although CB recommendation has the overspecialization
problem, using stylometric features does not prevent docu-
ments with different subjects from being retrieved, as long as
writing styles match. However, recommendations can be bi-
ased towards some book types, e.g, if a user starts its profile
with authors like Beatrix Potter, he will be recommended
more children authors, due to the simple writing style. We
believe that CB stylometric recommendation should be com-
plemented with topic recommendation in order to overcome
style overspecialization in these special cases.
Moreover, using LDA has been a good choice, because
most-frequent-words topics have proved to be better features
than frequencies of POST bi-grams frequencies, vocabulary
richness, and document size.
5. CONCLUSION
In this paper we explore the use of stylometric features
with a RF classifier in the book recommendation task. Sty-
lometric features are typically used for authorship detection.
We begun by using a kNN item-based CF algorithm to es-
tablish a baseline, and then improving this result through
15
hybridization with a CB approach. Our CB algorithm pro-
cessed documents extracting vocabulary richness, document
size, POST bi-grams, and most-frequent-words. Vocabu-
lary richness, document size, and POST bi-grams frequen-
cies were combined in normalized vectors. Most-frequent-
words were extracted using LDA topics. Both document
representations fed a RF classification algorithm. We used
RF to assess the influence of negative and positive examples
in user preferences.
Experiments have shown that most-frequent-words topics
preform better than normalized vectors of vocabulary rich-
ness, document size, and POST bi-grams. Nevertheless, CB
filtering predictions do not outperform CF predictions, but
can improve CF performance, which is consistent with ongo-
ing work on recommendation systems area. Most-frequent-
words have advantages over the rest of stylometric features,
because its extraction need less pre-processing.
Regarding the goals defined at the beginning of this paper,
we came to the conclusion that (a) when used individually,
CF filtering results are better than CB stylometric retrieval,
but when combined results are better; and that (b) negative
examples do not contribute to improve recommendations.
We intend to continue our work with the automatic gen-
eration of other types of meta-data. We also want to explore
stylometric RF in solving the new item and long tail prob-
lems. Finally, we plan pre-process books, using stylometry
to automatically generate meta-data like authors’ names and
genre, among others.
Acknowledgments
This work was supported by national funds through FCT
- Fundação para a Ciência e a Tecnologia, under project
PEst-OE/EEI/LA0021/2011.
6. REFERENCES
[1] G. Adomavicius and A. Tuzhilin. Toward the next
generation of recommender systems: A survey of the
state-of-the-art and possible extensions. Knowledge
and Data Engineering, IEEE Transactions on,
17(6):734–749, 2005.
[2] M. Balabanović and Y. Shoham. Fab: content-based,
collaborative recommendation. Commun. ACM,
40(3):66–72, Mar. 1997.
[3] D. Blei, A. Ng, and M. Jordan. Latent dirichlet
allocation. J. Mach. Learn. Res., 3:993–1022, Mar.
2003.
[4] R. Burke. Hybrid web recommender systems. In
P. Brusilovsky, A. Kobsa, and W. Nejdl, editors, The
adaptive web, pages 377–408. Springer-Verlag, Berlin,
Heidelberg, 2007.
[5] B. Chikhaoui, M. Chiazzaro, and S. Wang. An
improved hybrid recommender system by combining
predictions. In Proc. of the 2011 IEEE WS of
International Conf. on Advanced Information
Networking and App., WAINA ’11, pages 644–649,
Washington, DC, USA, 2011. IEEE Computer Society.
[6] A. Gunawardana and C. Meek. A unified approach to
building hybrid recommender systems. In Proc. of the
third ACM conference on Recommender systems,
RecSys ’09, pages 117–124, New York, NY, USA,
2009. ACM.
[7] J. Kamps. The impact of author ranking in a library
catalogue. In Proc. of the 4th ACM workshop on
Online books, complementary social media and
crowdsourcing, BooksOnline ’11, pages 35–40, New
York, NY, USA, 2011. ACM.
[8] M. Lee, P. Choi, and Y. Woo. A hybrid recommender
system combining collaborative filtering with neural
network. In Proc. of the Second International
Conference on Adaptive Hypermedia and Adaptive
Web-Based Systems, AH ’02, pages 531–534, London,
UK, UK, 2002. Springer-Verlag.
[9] Q. Li and B. Kim. An approach for combining
content-based and collaborative filters. In Proc. of the
sixth international workshop on Information retrieval
with Asian languages - Volume 11, AsianIR ’03, pages
17–24, Stroudsburg, PA, USA, 2003. Association for
Computational Linguistics.
[10] P. Lops, M. Gemmis, and G. Semeraro. Content-based
recommender systems: State of the art and trends. In
F. Ricci, L. Rokach, B. Shapira, and P. B. Kantor,
editors, Recommender Systems Handbook, pages
73–105. Springer US, 2011.
[11] R. Mooney and L. Roy. Content-based book
recommending using learning for text categorization.
In Proc. of the fifth ACM conference on Digital
libraries, DL ’00, pages 195–204, New York, NY, USA,
2000. ACM.
[12] M. Pazzani. A framework for collaborative,
content-based and demographic filtering. Artif. Intell.
Rev., 13(5-6):393–408, Dec. 1999.
[13] J. Rocchio. Relevance Feedback in Information
Retrieval, pages 313–323. Prentice-Hall, 1971.
[14] B. Sarwar, G. Karypis, J. Konstan, and J. Riedl.
Item-based collaborative filtering recommendation
algorithms. In Proceedings of the 10th international
conference on World Wide Web, WWW ’01, pages
285–295, New York, NY, USA, 2001. ACM.
[15] Y. Seroussi, I. Zukerman, and F. Bohnert. Authorship
attribution with latent dirichlet allocation. In
Proceedings of the Fifteenth Conference on
Computational Natural Language Learning, CoNLL
’11, pages 181–189, Stroudsburg, PA, USA, 2011.
Association for Computational Linguistics.
[16] E. Stamatatos. A survey of modern authorship
attribution methods. J. Am. Soc. Inf. Sci. Technol.,
60(3):538–556, Mar. 2009.
[17] X. Su and T. Khoshgoftaar. A survey of collaborative
filtering techniques. Advances in Artificial Intelligence,
2009:1–20, 2009.
[18] M. Utiyama and M. Yamamoto. Relevance feedback
models for recommendation. In Proc. of the 2006
Conference on Empirical Methods in Natural Language
Processing, EMNLP ’06, pages 449–456, Stroudsburg,
PA, USA, 2006. Association for Computational
Linguistics.
[19] P. C. Vaz, D. M. de Matos, B. Martins, and
P. Calado. Improving a hybrid literary book
recommendation system through author ranking. In
Proceedings of the 12th ACM/IEEE-CS joint
conference on Digital Libraries, JCDL ’12, pages
387–388, New York, NY, USA, 2012. ACM.
16
