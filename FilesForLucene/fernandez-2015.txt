SHORT PAPER
Online identification of appliances from power consumption data
collected by smart meters
M. Rodrı́guez Fernández1 • I. González Alonso2 • E. Zalama Casanova1
Received: 22 March 2014 / Accepted: 7 June 2015
 Springer-Verlag London 2015
Abstract The efficient use of resources is a matter of
great concern in today’s society, especially in the energy
sector. Although the main strategy to decrease energy use
has long been focused on supply, over the last few years,
there has been a shift to the demand side. Under this new
line of action, demand-side management networks have
emerged and extended from the household level to larger
installations, with the appearance of the concepts of Smart
Grids and even Smart Cities. The extended use of Smart
Meters for measuring residential electricity consumption
facilitates the creation of such intelligent environments. In
this context, this article proposes a system which extracts
value from the collected consumer information to identify
the appliances belonging to that smart environment by
means of machine learning techniques. Considering the
large amount of information that would be handled when
millions of homes were sending data, big data technology
has been used. An experiment to evaluate the classification
method was carried out with seven devices and three dif-
ferent configurations. The results are also reported,
achieving promising results, with recognition rates of 75 %
after 1 h of training and 100 % after 4 h.
Keywords Smart meter  Power consumption  Big data 
Machine learning  Supervised classification  Energy
efficiency
1 Introduction
The European Union (EU) aims to reduce its Green House
Gas (GHG) emissions and its total energy consumption by
20 % by 2020 [1]. Although incorporating renewable
energy sources to the supply has been an important energy
strategy in Europe and world-wide, the importance of
energy management on the demand side has recently been
discussed [2]. In Europe, for instance, the building sector
represents 40 % of the total energy consumption; thus,
incorporating in-home management systems at household
level can represent a promising line of action to achieve the
EU 2020 targets.
These systems have advanced metering infrastructures
that monitor home energy consumption, elaborate person-
alized energy profiles, and settle the basis for energy
behavior modifications. This type of infrastructure is
becoming more widespread, and most of the information
obtained from it is not being fully exploited [3]. By
learning from the consumption data to anticipate the final
user’s energy demand in the short–medium term, the effi-
ciency of the energy sector would consequently be
improved [4].
Furthermore, one of the main obstacles to solve—as the
Spanish Electrical Grid Platform has pointed out in its
Research Agenda [5]—is the lack of standard and open
communications protocols to guarantee interoperability
between equipment made by different manufacturers. The
Digital Home Compliant (DHC2.0) [6] protocol, which has
been applied in various fields such as health-based
& M. Rodrı́guez Fernández
maria.rodriguez.fernandez@gmail.com
I. González Alonso
gonzalezaloignacio@uniovi.es
E. Zalama Casanova
ezalama@eii.uva.es
1 Universidad de Valladolid, Valladolid, Spain
2 University of Oviedo, Oviedo, Asturias, Spain
123
Pattern Anal Applic
DOI 10.1007/s10044-015-0487-x
scenarios [7], arises with the aim of solving these needs.
Currently, any DHC aware device should implement its
own software adapter, which acts as intermediary with the
DHC Network. A better interoperability of the system
would be achieved by automatic deployment of the specific
adapter. To do this, it will be necessary, on the one hand, to
automatically generate the code for that adapter and sec-
ondly identify the device to run the appropriate code.
In this context, this proposal seeks to extract the col-
lected consumption data from these real-world environ-
ments and use them to discover the elements that integrate
them, identifying which appliances have generated that
consumption. On the one hand, the first step would be to
anticipate demand. Moreover, this will permit itemized
electricity bills and targeted energy saving advice. On the
other hand, it will provide the DHC protocol with the
necessary feedback to automatically deploy the specific
adapter to permit the appliance to be part of the network.
Concerning the possible growth of data—increasing the
number of appliances in the home, or the number of homes
belonging to the grid—the traditional computing technolo-
gies have some limitations in terms of the capacity to process
data, abovewhich specific supercomputers are required,with
a very high associated cost. BigData technology [8] is able to
approach the capabilities of supercomputers using conven-
tional hardware, making it possible to apply the technology
to fields in which it was unprofitable before. The large
amounts of consumption data can be processed by a classifier
system to automatically perform an online learning. More-
over, the application of machine learning (ML) algorithms
running over big data technologies provides the system with
faster response times and scalability, which are the most
innovative characteristics of the contribution.
The document is organized as follows: First, in the state
of the art section, an overview of relevant automatic
identification mechanisms is set out. Then, the way in
which consumption data are collected and processed by the
system using machine learning techniques is described in
Sect. 3. The experiment carried out to test the proposed
environment is described in Sect. 4, as well as the
discussion of the obtained results. Finally, the document
closes with the conclusions and future work.
2 State of the art
The field of the automatic identification of electrical
devices based on power consumption has been explored
over more than two decades in several studies. The first
proposals [9, 10] had to limit their testing infrastructure to
a single Smart Meter located at the point of entry/exit of
the house due to the price of the technology. Therefore, the
identification of the specific power consumption record
belonging to each individual appliance was done afterward.
A remarkable method, the non-intrusive load monitoring
(NILM) proposed by George Hart [11], was able to rec-
ognize a representation of a finite state machine con-
sumption of an appliance over time, given the consumption
changes (up and down) [12]. However, the algorithm was
able to identify only on/off appliances and appliances
which could be described as finite state graph.
After years of relatively little research in the field, per-
haps driven by the new possibilities that have arisen around
the concept of Smart Grid and new technological oppor-
tunities, it seems that new ideas have emerged strongly.
Based on these new developments, two main approaches to
identify appliances are distinguished.
The first approach obtains very accurate data under a
low measuring rate [8]. This method requires simple soft-
ware but special hardware, so it does not fit with the initial
idea of using the power consumption data obtained by an
existing Smart Meter network located in a smart home
environment.
The other main approach, where this work is framed,
proposes to measure large amounts of data but not very
accurately. Therefore, more complex software, commonly
based on ML techniques, is needed to analyze the data.
Different ML methods can be used depending on the
characteristics of the data and the goal to be achieved. In
Table 1, several studies are listed, checking the values for
Table 1 Comparison of ML-based appliance recognition studies
References Plug-based meter Online training No appliances Reading rate Training algorithm Accuracy (%) Scalable
[13] NO NO 5 10 s HMM 75–95 NO
[14] NO NO 3 15 min ANN 80–97 NO
[17] NO NO 6 10 s DTW 10–95 NO
[18] NO YES 8 1 s KNN 70–90 YES
[19] NO YES 9 5 s DBN 92–99 YES
[20] NO NO 13 1 s K-means 60–97 NO
[21] YES NO 10 10 s KNN and GMM 84–94 NO
Pattern Anal Applic
123
the more remarkable features of our solution, as well as the
configuration and results of their experiments.
Zia et al. make use of Hidden Markov Models (HMM)
to recognize the individual appliances from combined load
[13]. However, the complexity of the HMM models
increases exponentially as the number of target appliances
increases, which limits the applicability of this learning
method. Artificial Neural Networks (ANN) are applied by
Prudenzi to find out the patterns of use of home appliances
[14], and although the extensibility is better (input feed-
back), exhaustive training for each appliance is needed. In
the same way, Murata and Onoda estimate the behavior of
the appliances from the total load demand curve thanks to
radial basis function networks [15]. Baranski and Voss use
Genetic Algorithms for the same purpose [16]. A weighted
algorithm such as Dynamic Time Warping (DTW), used by
Zaidi, also gives uncertain results when the number of
loads increases [17].
Berges et al. present a new approach by means of online
learning. The proposed solution, based on K-Nearest
Neighbor (KNN), is scalable, but the tests have been car-
ried out with laboratory generated data so far [18]. Lin
et al. follow the same idea, but using a Dynamic Bayesian
Network (DBN) [19]. However, online learning is not
enough for learning from Big Data streams, in which
thousands of samples arrive each second.
A different clustering method based on k-means is
proposed by Simon, Liang, and Cheng. They measure the
consumption of all appliances in the house a priori and
record them, which limits its scalability. However, there
are several drawbacks and challenges, as highlighted by the
authors; the accuracy of the classifier is low for some types
of appliances, due to consumption similarities. In addition,
multi-state appliances form several clusters due to the
multiple states [20].
If we add the technological advances in the field of
Smart Metering to the mentioned techniques, the study of
Ridi is the one, using Plug-based Smart Meters, which
facilitates its applicability. They combine KNN and
Gaussian Mixture Models (GMM) techniques. The main
disadvantage is the limitations to scalability, as they store
the row data in xml files [21].
Summarizing, although a great deal of progress has been
made, the process of automatic identification still needs to be
upgraded. Firstly, most studies are focused on the disag-
gregation of the total measurement, since they do not have
individual meters for each plug. In addition, the majority of
them need a historical load database of different electrical
appliances, so they fail when a new device is introduced into
the environment. The storage of that information can also be
a handicap, since time-series records are often extremely
large. This is translated into limited scalability. Finally, some
aspects are still unresolved, such as the full automation of the
identification process, and the recognition of low consump-
tion devices, which are usually not taken into account when
the total consumption is large.
3 System overview
The system represents an integrated solution to identify
household appliances from the consumption data gathered
by Smart Meters, installed in an existing real-world envi-
ronment. The components involved in the system, whose
graphical description is shown in Fig. 1, are grouped
according to their function:
• The Data Collection hardware and software compo-
nents are placed in each user’s smart home. They obtain
the consumption-related data from all the appliances
and service robots and send them to the cloud at a
predefined rate, in order to be used by the Recognition
Module.
• The Recognition Module function takes place in the
cloud, where the consumption Big Data, arriving in
real-time, are used by the classifier element, which
follows a client/server structure to perform the online
Fig. 1 Components of the
proposed system
Pattern Anal Applic
123
learning. Once the device has been recognized, we can
anticipate demand and deploy the corresponding
DHC2.0 adapter.
These parts—Sects. 3.1 and 3.2—are described in detail
in the next subsections.
3.1 Data collection
In order to set up interoperability in a Digital Home
environment and allow cooperation between devices
designed by different manufactures, a standard communi-
cation protocol is needed. DHC2.0, which is based on the
Web Service for Device (WS4D) technology [22], is used
in this work. Several sub-modules, each delivering specific
services, make up the DHC2.0 architecture. Specifically,
the DHC Energy module handles those aspects related to
the energy efficiency of the devices integrating the Digital
Home environment.
Regarding the hardware requirements, intelligent mea-
suring devices (Smart Meters) are able to report informa-
tion about the consumed power at a predefined rate. For
instance, the plug-based Smart Meters, shown in Fig. 2,
obtain the consumption value (in watts) of each appliance
connected to them and send it to the plugs–control unit by
means of radio-frequency and ZigBee protocols, respec-
tively. This proposal, as with the DHC protocol, aims to be
applicable to any meter device, regardless of brand or
model. In addition, selecting different meters to test the
same experiment ensures that the possible noise introduced
by them has no influence on the classification process.
From the analysis of the measured data, it can be
deduced that the loading phase pattern remains constant for
all of them. As an example, Fig. 3 shows how the con-
sumption pattern of the fridge (a) and the monitor (b) is
repeated over 24 h.
The consumption values can be considered as a time-
series sequence. This type of data, characterized by being
composed of an ordered list of real numbers, where each
number represents a value at a point in time, is present in
fields such as medicine [23], document analysis [24],
speech recognition [25], or the economy [26]. Although
these research areas go beyond the scope of this article,
taking their identification methods into account was con-
sidered useful, as the processed data have several charac-
teristics in common.
The consumption records have some intrinsic charac-
teristics, due to the continuous creation over time, such as
serial correlation, stationary, noise, or missing values. This
can affect their correct classification [27], since the
majority of algorithms do not take such temporality into
account. These peculiarities make some weighted algo-
rithms more suitable than others, as for example, Dynamic
Time Warping [28], which is one of the tested algorithms,
as will be seen in the Experiment Section.
Finally, acting as an intermediary between the Smart
Meter network and the Recognition Module, the DHC
Energy Adapter software collects the real-time consump-
tion values and makes them available. It is also responsible
for sending this information to the cloud. Cloud technology
does not require a large infrastructure at home and,
moreover, provides facilities to manage and maintain the
integrity, security, and availability of data. Concerning the
possible growth of data (increment of the number of
homes, as well as the devices per home), the other key
technology is Big Data, as it facilitates its scalability.
Furthermore, it offers near to real-time monitoring and
other information analysis and processing possibilities that
fit perfectly with the proposed system, such as the support
for ML algorithms, which will be used by the Recognition
Module.
3.2 Recognition module
The purpose of this module was to identify which device
has the highest probability of having generated an unla-
beled consumption record. To do so, this module trains an
electrical device classifier using supervised Machine
Learning (ML) techniques.
Fig. 2 a EcoManager Smart
Meter (Current Cost).
b Plugwise SmartMeter
Pattern Anal Applic
123
With the final aim of choosing the ML technique that
best suits the environment described at the beginning of the
section, as well as the type of input data, several available
approaches were analyzed (see Fig. 4). Firstly, Weka [29]
is a matured software that has the advantage of incorpo-
rating large numbers of training algorithms. It was used in
the preparatory phase of this research for exploring and
characterizing the data and can easily test the suitability of
different learning methods. Nevertheless, for larger
amounts of data, the tool did not work as expected, so
specific big data tools were studied. Mahout [30] is an
Apache project that aims to produce a free implementation
package that includes the main ML algorithms. The project
is very active, but there are still algorithms to be incor-
porated, especially for time-series classifications. Its main
advantage over other stand-alone implementations is the
scalability offered when running on Hadoop [31]. Taking
into account the fact that power consumption data are an
infinite time series, the online learning approach was
considered a suitable option, offering a simple, fast solu-
tion requiring less memory, and which avoids re-training
when adding new data, since the model is updated at the
end of each iteration. In particular, the Jubatus online
learning framework is a tool which maintains the scala-
bility characteristics of Mahout and, in addition, allows a
real-time response to be obtained. It incorporates some
weighted algorithms which are the most appropriate for
time-series classifications and has been successfully tested
in other fields such as computer vision [32] or detection of
malicious web sites [33].
Regarding scalability, the throughput of a Jubatus clas-
sifier increases almost linearly with the number of servers
Fig. 3 Example of the power consumption measured for the fridge (a) and the monitor (b) during 24 h
Fig. 4 Analyzed machine learning tools
Pattern Anal Applic
123
[34]. Besides, Jubatus has been evaluated by classifying
Twitter tweets on a global scale (8000 per s) with two
servers. An accuracy rate of 90 % in batch processing was
achieved with data obtained within 10 s [35].
In our particular case, considering that each home sub-
mits consumption information every minute, it means
525,600 samples per year. Each sample causes the trans-
mission of 1 kilobyte; therefore, each home generates
538,214,400 bytes of information per year. Considering a
population of ten million homes, a system able to process 5
Petabytes of information per year is needed. Additionally,
it would be necessary to support the execution of the
operations to be performed with all this information, i.e.,
the learning process and the model synchronization among
servers, which could greatly increase the needs (Fig. 5
shows the architecture of the described scenario).
Jubatus is based on a client/server structure, where the
Classifier Server performs the main role in the learning
process using the consumption data provided by the clas-
sifier client as a basis. As the training is done online, the
Classifier Server obtains and saves a new version of the
model in each interaction.
The classification process involves two main operations
that can be performed in parallel:
• Training the model: the train function of the Classifier
Server receives the labeled record (list of tuple of
datum and its label, following the Jubatus nomencla-
ture) and returns the number of trained datum.
• Evaluation and adjustment of the model: The model is
tested with unlabeled data by means of the classify
function. It receives the list of datum to classify and
returns a list of estimated results, specifically, for each
label, the probability of having generated the input
record. The score, which represents the possibility of
belonging to each class, is calculated as the inner
product of the model coefficients and the feature vector.
In this step, it is possible to adjust the input variables
contained in the Training Datum and to determine and
configure the learning algorithm in order to improve the
accuracy of the classifier. The results of several different
tested configurations are listed in the next section.
4 The experiment
In a context such as the one described in the previous
section, the following hypothesis is posed: it is possible to
identify electrical devices based on their consumption data,
using an online classifier. This will involve an experiment
to test it. Firstly, the design of the experiment is described,
followed by the process of obtaining the data and using
them for classifying the appliances with Jubatus. Finally,
the obtained results are presented.
4.1 Design of the experiment
The SysML block diagram in Fig. 5 shows the structure of
the experiment. On the one hand, the DHC Adapter obtains
the consumption data through a network of Smart Meters,
which are connected to the devices under study, and makes
them available. As can be seen in Fig. 6, the electricity
consumption values of seven appliances (CRT monitor,
LCD monitor, heater, lamp, fridge, printer, and smart TV)
are measured in the experiment. On the other hand, the
Recognition Module is represented by the Classifier Server,
which is continuously running and waiting for the Classi-
fier Client, which sends the labeled and unlabeled records
to do the training and testing, respectively. In each iteration
of the experiment, the Classifier Server receives the data,
learns online, and updates the model.
The Classifier Tester element is introduced to launch the
experiment, thereby obtaining and configuring the neces-
sary elements. It consumes the DPWS service offered by
the adapter to collect the consumption values and uses
them to compose the Training Datum. The classifier han-
dles the missing values by taking the last read value. If it is
the first reading, it is ignored.
Fig. 5 Future application
scenario
Pattern Anal Applic
123
The process carried out for testing each algorithm is
shown in the activity diagram of Fig. 7. At the beginning of
the experiment, the specific configuration is defined. On the
one hand, the measuring rate and consequently the window
size are set. On the other hand, the number of iterations, to
determine the training time, is also fixed. Specifically, three
different rates were tested for each algorithm (10 s, 1 min,
and 3.75 min), analyzing the results for four training times
(1, 2, 4, and 8 h).
In each iteration, fifty percent of the measured data
are used for training the classifier (updating the model),
while the remaining fifty percent is used for testing it. If
the accuracy is 75 % or higher, the hypothesis can be
confirmed, and hence the classifier works as expected.
Fig. 6 SysML block diagram
of the experiment
Fig. 7 SysML Activity
diagram of the experiment
Pattern Anal Applic
123
The accuracy of the classifier is calculated as the number
of times an unlabeled record is classified in the correct
class, in relation to the total number of tests carried out.
Both the first and second choices were taken into
account, considering the weight of the second as half
[41].
4.2 Jubatus classification
Once a record of sixteen correct consumption measures
is obtained, the Jubatus Datum object—used by the
Classifier Client—has to be composed. An example of
the Java code is shown in Fig. 8. It is made up of the
minimum, maximum, mean, sum, deviation, and vari-
ance of the consumption values record. Finally, the Fast
Fourier Transform (FFT) was used to introduce the
frequency aspect.
The output of the FFT is an array of 16 complex num-
bers, corresponding to the number of consumption mea-
sures per iteration—using a multiple of two is appropriate
for the FFT. It is possible to use both the real and imagi-
nary part to get very accurate frequency information, by
simply looking at the magnitude, which is calculated using
the distance Eq. (1).
Magnitude ið Þ ¼
ffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffi
real ið Þ2 þ imaginary ið Þ2
q
ð1Þ
The makeTrainDatum function is used to label the
22-element records created by the makeDatum function,
which is also used in the testing phase (since the record is
not labeled in that case).
Jubatus only supports linear models for classification. A
model includes a list of coefficients and their deviations if
needed. The experiment has tested all the training algo-
rithms implemented in Jubatus. The only differences
between them are their equations for updating the coeffi-
cients of the linear model [34]. They can be classified in
three families according to their basis:
• Perceptron [36], the classical online learning algorithm,
performs a multiclass classification based on a set of
weight vectors (one for each class), which are updated
according to the prediction results, leading to the
segmentation of the data space. Based on this, passive
aggressive (PA) [37] and two improved versions with a
better ability to cope with noise are offered by the tool,
but they do not offer optimum results in multi-class
classification.
• Confidence Weighted (CW) [38] is based on the notion
of parameter confidence measurement, as an improve-
ment over the abovementioned methods. Maintaining
that idea, Adaptive Regularization of weights (AROW)
[39] also offers large margin training and the capacity
to handle non-separable data. Normal Gaussian herding
(NHERD) [40] is an attempt to improve learning when
some noise is present.
For launching the experiments, three parameters need to
be set in a json configuration file. Firstly, the method (e.g.,
‘‘AROW’’), secondly, the converter (which decides how to
extract each feature vector from input data), and finally, the
regularization_weight parameter (when this parameter
becomes bigger, the learning speed will increase, while the
noise will decrease).
5 Results
Using a fast measuring rate, and therefore a small window
(since a training record is made up of sixteen consumption
measures), will enable the learner to adapt more rapidly. A
Fig. 8 Code fragment
illustrating the creation of
training records
Pattern Anal Applic
123
larger window will lend more stability to the overall pro-
cess. For the first configuration, a rate of 10 s was used (2
min and 40 s for each iteration), and the results are listed in
Table 2. In the second, a 1-min rate was chosen (16 min for
each iteration), and the results are shown in Table 3.
Finally, in the third configuration (see Table 4), measure-
ments were obtained each 4 min (1 h for each iteration).
As can be seen, the algorithms belonging to the first
family (perceptron, PA, PA1, and PA2) show a similar
behavior, with medium recognition rates, which are lowest
with the first configuration. The weighted algorithms (CW
and AROW) offer the best performance of all the studied
configurations. Specifically, CW has achieved 100 % cor-
rect recognition rates after 8 h of training using the second
configuration. Finally, NHERD did not obtain the expected
results, offering the worst results, since the classifier
seemed not to learn, showing a nearly constant rate of
success.
According to the results shown in tables, the most
suitable window size is the one used in the second con-
figuration. The evolution learning rate of the classifier in
that configuration, for each algorithm, can be seen in
Fig. 9, where the accumulated accuracy in the first 15
iterations (4 h of training) is shown. At the beginning of the
training, AROW shows a better accuracy, but from the
thirteenth iteration, its accuracy remains constant, while
CW continues to grow, achieving 75.83 % of accumulated
accuracy rate.
6 Conclusions and future work
In this paper, we propose a novel solution for the
identification of home appliances based on the collection
and analysis of their power consumption values by a
network of plug-based Smart Meters, which permits a
brand independent, cost-effective, and easy-to-install
architecture.
The identification process is based on Machine Learning
techniques, training a supervised classifier to recognize
which device has the highest probability of having gener-
ated an unlabeled consumption record. The online learning
approach avoids the problem of storing the large amount of
data generated by the meters. Besides, it is a fact that this
type of infrastructure is becoming more widespread, so the
number of homes adopting this proposal would be in the
order of millions. In that case, Big Data technology will be
the key to process such amounts of data. In addition, it
Table 2 Accuracy of the classification tests over time for each considered algorithm with configuration 1 (10 s rate, 2.66 min for each iteration)
Training time (h) No iterations Perceptron (%) PA (%) PA1 (%) PA2 (%) CW (%) AROW (%) NHERD (%)
1 23 37.5 37.5 37.5 12.5 87.5 75.0 50.0
2 45 37.5 37.5 37.5 37.5 50.0 75.0 37.5
4 90 37.5 37.5 37.5 37.5 87.5 87.5 37.5
8 180 37.5 50.0 50.0 50.0 75.0 75.0 37.5
Table 3 Accuracy of the classification tests over time for each considered algorithm with configuration 2 (1 min rate, 16 min for each iteration)
Training time (h) No iterations Perceptron (%) PA (%) PA1 (%) PA2 (%) CW (%) AROW (%) NHERD (%)
1 4 37.5 37.5 37.5 62.5 50.0 62.5 37.5
2 8 50.0 37.5 37.5 37.5 62.5 75.0 37.5
4 15 37.5 37.5 37.5 50.0 75.0 75.0 50.0
8 30 62.5 50.0 37.5 37.5 100 87.5 37.5
Table 4 Accuracy of the classification tests over time for each considered algorithm with configuration 3 (3.75 min rate, 1 h for each iteration)
Training time (h) No iterations Perceptron (%) PA (%) PA1 (%) PA2 (%) CW (%) AROW (%) NHERD (%)
1 1 62.5 37.5 37.5 50.0 87.5 37.5 37.5
2 2 62.5 50.0 50.0 37.5 75.0 50.0 37.5
4 4 50.0 50.0 46.8 37.5 75.0 37.5 37.5
8 8 37.5 62.0 43.7 50.0 75.0 50.0 37.5
Pattern Anal Applic
123
presents other advantages such as scalability and minimum
required infrastructure.
An experiment was carried out to test the system. The
classifier was successfully trained using consumption data
from seven devices. Seven different learning algorithms
were tested under three different experimental configura-
tions, and an accumulated accuracy of 75.83 % after 4 h of
training was obtained with the CW algorithm, followed
closely by the other weighted algorithm, AROW.
In addition to the advantages that this identification
system could provide to the efficiency of the energy sector
in the medium-long term, its functionality could also be
applied in the short term to improve the DHC protocol.
When a new device has to be incorporated to the DHC
network, the proposed identification mechanism would
enable us to know which specific DHC adapter has to be
deployed. This would mean that, instead of doing this
action manually, as it is currently done, it would be done
automatically; hence, the interoperability of the system
would be enhanced.
A potential improvement could be to use clustering
techniques in a previous phase in order to find out which
category the appliance belongs to and therefore reduces the
number of candidates that the classifier would need to
screen it with.
As far as possible fields of application goes, the pro-
posed system presents promising characteristics that would
contribute to reaching a future energy scenario where the
supply and demand curve will always be accurately
matched.
Acknowledgments This work has been possible thanks to the
financial support of the Spanish Department of Science and Tech-
nology, the Ministry of Industry, Energy and Tourism and European
Regional Development (FEDER) funds. We would like to acknowl-
edge the continuous support given by the University of Oviedo and
also for providing all the resources that made our research possible
and, in particular, their management of the DHCompliant 2 project
(grant TSI-020100-2011-313). The authors would like to especially
thank the staff of the Infobotica Research Group (University of
Oviedo) for all the valuable comments.
References
1. European Commission (2010) ‘‘Energy 2020: a strategy for
competitive, sustainable and secure energy’’. COM 2010
2. Lampropoulos I, van den Bosch PP, Kling WL (2012) ‘‘A pre-
dictive control scheme for automated demand response mecha-
nisms,’’ In: Innovative smart grid technologies (isgt europe),
2012 3rd ieee pes international conference and exhibition on,
2012, pp 1–8
3. Jahn M, Jentsch M, Prause CR, Pramudianto F, Al-Akkad A,
Reiners R (2010) ‘‘The energy aware smart home,’’ In: 2010 5th
international conference on future information technology (Fu-
tureTech) pp 1–8
4. Vine D, Buys L, Morris P (2013) ‘‘The effectiveness of energy
feedback for conservation and peak demand: a literature review’’.
Open J. Energy Effic 2013
5. Electrical Grid Spanish Platform (2008) ‘‘SRA 2015. Research
Schedule’’
6. González Alonso I, Álvarez Fres O, Alonso Fernández O, del
Torno PG, Maestre JM, Almudena Garcı́a Fuente M (2012)
‘‘Towards a new open communication standard between homes
and service robots, the DHCompliant case’’. Robot Auton Syst
7. Brink M (2013) Future-proof platforms for aging-in-place. LAP
LAMBERT Academic Publishing
8. Marz N, Warren J (2013) Big Data: Principles and best practices
of scalable realtime data systems. Manning Publications
9. Leeb SB, Kirtley JL Jr (1993) ‘‘A multiscale transient event
detector for nonintrusive load monitoring’’, In: Industrial elec-
tronics, control, and instrumentation, proceedings of the
IECON’93. Int Conf 1993:354–359
10. Drenker S, Kader A (1999) Nonintrusive monitoring of electric
loads. Comput Appl Power IEEE 12(4):47–51
11. Hart GW (1992) Nonintrusive appliance load monitoring. Proc
IEEE 80(12):1870–1891
12. Cole AI, Albicki A (1998) ‘‘Algorithm for nonintrusive identifi-
cation of residential appliances’’. In: Proceedings of the 1998
Fig. 9 Evolution of the
accumulated accuracy of the
classifier for each training
algorithm using the second
configuration
Pattern Anal Applic
123
IEEE international symposium on circuits and systems
pp 338–341
13. Zia T, Bruckner D, Zaidi A (2011) ‘‘A hidden Markov model
based procedure for identifying household electric loads,’’ In:
IECON 2011—37th Annual Conference on IEEE Industrial
Electronics Society pp 3218–3223
14. Prudenzi A (2002) ‘‘A neuron nets based procedure for identi-
fying domestic appliances pattern-of-use from energy recordings
at meter panel’’, in Power Engineering Society Winter Meeting,
2002. IEEE 2:941–946
15. Murata H, Onoda T (2002) ‘‘Estimation of power consumption
for household electric appliances,’’ In: Neural information pro-
cessing, 2002. iconip’02. proceedings of the 9th international
conference on pp 2299–2303
16. Baranski M, Voss J (2004) ‘‘Genetic algorithm for pattern
detection in NIALM systems’’. In: Systems, man and cybernetics,
2004 ieee international conference on pp 3462–3468
17. Zaidi AA, Kupzog F, Zia T, Palensky P (2010) ‘‘Load recognition
for automated demand response in microgrids’’. In: IECON
2010-36th Annual Conference on IEEE Industrial Electronics
Society pp 2442–2447
18. Berges M, Goldman E, Matthews HS, Soibelman L (2009)
‘‘Learning systems for electric consumption of buildings’’. In:
ASCI international workshop on computing in civil engineering
19. Lin G, Lee S, Hsu JJ, Jih W (2010) ‘‘Applying power meters for
appliance recognition on the electric panel’’. In: Industrial elec-
tronics and applications (ICIEA), 2010 the 5th IEEE conference
on 2010 pp 2254–2259
20. Ng SKK, Liang J, Cheng JWM (2009) ‘‘Automatic appliance
load signature identification by statistical clustering’’ In: 8th
international conference on advances in power system control,
operation and management (APSCOM 2009) pp 1–6
21. Ridi A, Gisler C, Hennebert J (2013) ‘‘Automatic identification of
electrical appliances using smart plugs,’’ In: Systems, signal
processing and their applications (WoSSPA), 2013 8th interna-
tional workshop on, 2013 pp 301–305
22. Jammes F, Mensch A, Smit H (2005) ‘‘Service-oriented device
communications using the devices profile for web services,’’ In:
Proceedings of the 3rd international workshop on Middleware for
pervasive and ad-hoc computing. pp 1–8
23. Rodriguez J, Goni A, Illarramendi A (2005) Real-time classifi-
cation of ECGs on a PDA. Inf Technol Biomed IEEE Trans
9(1):23–34
24. Alaei A, Nagabhushan P, Pal U (2011) Piece-wise painting
technique for line segmentation of unconstrained handwritten
text: a specific study with Persian text documents. Pattern Anal
Appl 14(4):381–394
25. Maaly IA, El-Obaid M (2006) ‘‘Speech recognition using artifi-
cial neural networks’’. In: Information and communication tech-
nologies, 2006. ICTTA’06. pp 1246–1247
26. Lu C-J, Lee T-S, Chiu C-C (2009) Financial time series fore-
casting using independent component analysis and support vector
regression. Decis Support Syst 47(2):115–125
27. Lhermitte S, Verbesselt J, Verstraeten WW, Coppin P (2011) A
comparison of time series similarity measures for classification
and change detection of ecosystem dynamics. Remote Sens
Environ 115(12):3129–3152
28. Rakthanmanon T, Campana B, Mueen C, Batista B, Westover B,
Zhu Q, Zakaria J, Keogh E (2012) ‘‘Searching and mining tril-
lions of time series subsequences under dynamic time warping’’
In: Proceedings of the 18th ACM SIGKDD international con-
ference on Knowledge discovery and data mining pp 262–270
29. Frank E, Hall M,Holmes G, Kirkby R, Pfahringer B, Witten IH,
Trigg L (2010) ‘‘Weka-a machine learning workbench for data
mining,’’ In: Data mining and knowledge discovery handbook,
Springer pp 1269–1277
30. Owen S, Anil R, Dunning T, Friedman E (2011) Mahout in
action. Manning Publications, Pap/Psc
31. Lam C (2010) Hadoop in Action, 1st (ed) Manning Publications
32. Chechik G, Sharma V, Shalit U, Bengio S (2010) Large scale
online learning of image similarity through ranking. J Mach
Learn Res 11:1109–1135
33. Ma J, Saul LK, Savage S, Voelker GM (2009) ‘‘Identifying
suspicious URLs: an application of large-scale online learning,’’.
In: Proceedings of the 26th Annual International Conference on
Machine Learning pp 681–688
34. Hido s, Tokui S, Oda S (2013) ‘‘Jubatus: an open source platform
for distributed online machine learning,’’. In: NIPS 2013 Work-
shop on Big Learning, Lake Tahoe
35. Horikawa K, Kitayama Y, Oda S, Kumazaki H, Han J, Makino H,
Ishii M, Aoya K, Luo M, Uchikawa S (2012) Jubatus in action:
report on realtime big data analysis by Jubatus. NTT Technical
Review, NTT
36. McDonald R, Hall K, Mann G (2010) ‘‘Distributed training
strategies for the structured perceptron’’, In: Human language
technologies. Ann Conf North Am Chap Assoc Comp Linguist
2010:456–464
37. Crammer K, Dekel O, Keshet J, Shalev-Shwartz S, Singer Y
(2006) Online passive-aggressive algorithms. J Mach Learn Res
7:551–585
38. Crammer K, Dredze M, Kulesza A (2009) ‘‘Multi-class confi-
dence weighted algorithms,’’. In: Proceedings of the 2009 con-
ference on empirical methods in natural language processingpp.
496–504
39. Crammer K, Kulesza A, Dredze M (2009) Adaptive regulariza-
tion of weight vectors. Adv Neural Inf Process Syst 22:414–422
40. Crammer K, Lee DD (2010) ‘‘Learning via gaussian herding’’. In:
Pre-Proceeding NIPS, 2010
41. Stamatatos E, Widmer G (2005) Automatic identification of
music performers with learning ensembles. Artif Intell
165(1):37–56
Pattern Anal Applic
123
