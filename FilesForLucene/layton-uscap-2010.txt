Automatically Determining Phishing Campaigns
using the USCAP Methodology
Robert Layton
Internet Commerce Security Laboratory
University of Ballarat
Email: r.layton@icsl.ballarat.edu.au
Paul Watters
Internet Commerce Security Laboratory
University of Ballarat
Email: p.watters@icsl.ballarat.edu.au
Richard Dazeley
Data Mining and
Informatics Research Group
University of Ballarat
Email: r.dazeley@ballarat.edu.au
Abstract—Phishing fraudsters attempt to create an environ-
ment which looks and feels like a legitimate institution, while
at the same time attempting to bypass filters and suspicions of
their targets. This is a difficult compromise for the phishers and
presents a weakness in the process of conducting this fraud. In
this research, a methodology is presented that looks at the differ-
ences that occur between phishing websites from an authorship
analysis perspective and is able to determine different phishing
campaigns undertaken by phishing groups. The methodology is
named USCAP, for Unsupervised SCAP, which builds on the
SCAP methodology from supervised authorship and extends it
for unsupervised learning problems. The phishing website source
code is examined to generate a model that gives the size and
scope of each of the recognized phishing campaigns. The USCAP
methodology introduces the first time that phishing websites
have been clustered by campaign in an automatic and reliable
way, compared to previous methods which relied on costly
expert analysis of phishing websites. Evaluation of these clusters
indicates that each cluster is strongly consistent with a high
stability and reliability when analyzed using new information
about the attacks, such as the dates that the attack occurred on.
The clusters found are indicative of different phishing campaigns,
presenting a step towards an automated phishing authorship
analysis methodology.
I. INTRODUCTION
Phishing presents a major problem for all involved in this
scam. An attacker, the phisher, takes the guise of a trusted
third party, such as a bank or a social website. Through this
guise, they attempt to acquire confidential information about
a victim in order to profit from this information. Examples of
the types of information that can be stolen using this technique
are bank login details; usernames and passwords; and system
access codes. Other information which can be used to conduct
identity theft and identity fraud are targeted in phishing attacks
including a victim’s birth-dates, their mother’s maiden name
and their address. The effects of phishing has implications
far beyond these impacts on the victim, as phishing can hurt
the trust that a corporation carries with its consumers. This
can result in a loss of business and potential income, such as
scaring bank customers away from using online banking or
from a particular brand.
The problems that the phisher themselves have to deal
with are unlikely to raise much empathy but are important
for research into phishing scams. For an email based attack,
a fraudulent email attempts to direct a user to a phishing
webpage in order to collect login details, the phisher faces
many problems, thanks to the efforts of researchers in the
anti-phishing industry. An email must be crafted to bypass
phishing and spam filtering techniques [2] but still convey
enough information to make the end user think that the contact
is legitimate [15]. The language must be specific without using
keywords that trigger alerts [3], [31] and must contain a way to
direct the user to the phishing webpage without looking suspi-
cious. The URL of the phishing website will be different from
the target corporations real website, but must be disguised
to look the same. The phishing website itself must convey
the branding, general appearance and interaction that makes
it seem legitimate [25]. However the phishing website must
then bypass phishing filters and try to determine if anyone is
trying to remove it, such as a cybercrime research firm trying
to poison the stolen records. Each of these problems represents
a choice that the phishing attack author(s) must make in order
to run a successful attack.
The issue of choice when creating a document is the
theoretical basis behind authorship analysis [29]. When writing
a research article, a book and even a website, there are many
choices that the authors make in the creation process. By
analyzing these choices, the author of a document can be
inferred from previous work or by distinction from other work
in the area. Classic work in this area attributes the Federalist
papers to Madison rather then another claiming author in
Hamilton, based on the distribution of word counts [26]. In
this work, the choice of which words to use was considered
different between the two claiming authors and Madison’s
choice of words more closely matched those of the disputed
papers.
Authorship analysis can even be performed on choices
within a requirement of structured text, such as source code
of computer programs [27]. Despite the rigid and required
language required for the compilation of computer programs,
traits relating to authorship are still evident [14]. Traits such as
the methods of indentation and usage of upper or lower class
letters for variable names were able to discern authorship with
a high accuracy [27]. A common theme in authorship analysis
is that the more semantic the difference between available
choices, the more that choice determine authorship. Examples
include function words and structural choices which have been
shown to be very effective [34].978-1-4244-7761-6/10/$26.00 c© 2010 IEEE
A. Research Questions
In this research, a methodology for determining campaigns
of phishing attacks in a reliable manner is given, called
USCAP. This methodology is presented, applied to a corpus
of phishing website contents and the results show the size
and scope of different phishing campaigns. A campaign is
considered to be a series of similar phishing attacks by the
same author, where authorship of a phishing attack is described
in subsection II-A. This work shows the extent of the different
authors, who may or may not be directly responsible for the
phishing attack, but are facilitators of the crime.
This work is motivated by the need from law enforcement
agencies (LEAs) for a reliable method of determining the
size and scope of the operations of different phishing groups.
Through this, the aim of this work is to determine the size and
scope of the authors of phishing websites, in order to estimate
the more general problem of phishing groups.
In answering the below research questions, LEAs will have a
methodology that is able to consistently and reliably determine
the authorship of phishing websites in order to provide a target
for criminal investigations. The ability to focus investigations
on a single target has been identified as a potential benefit to
cybercrime investigations, which are often hampered by the
lack of direct authorship of attacks. Online service providers
could also use this information to gain information about their
adversaries. This information can be used in turn to establish
more directed responses to phishing attacks, such as warning
customers about key pieces of information to look for in
the current attacks. This information can be determined by
profiling each of the current phishing campaigns.
The work presented in here aims to answer the following
research questions:
1) Does the unsupervised SCAP (USCAP) methodology
provide reliable and consistent clusterings of phishing
websites by campaign?
2) What is the size and scope of each phishing campaign
recognized by the USCAP methodology?
B. Dataset
The dataset used for this research is a collection of over
700 phishing websites targeting a major Australian banking
institution. The dataset contains the full raw phishing website
source code, which was retrieved by following links in emails
marked as phishing. All websites in the database have been
verified as phishing by industry experts. The date a website
was retrieved and the URL it was hosted on has been collected
in the dataset. This extra information is used in the evaluation
phase, described in subsection III-D.
II. AUTHORSHIP ANALYSIS ON PHISHING
Cybercrime is an important application of authorship analy-
sis due to its increasing impact on today’s lifestyle. The nature
of the Internet makes anonymity easy while still allowing
Internet based crime to have a large impact, resulting in a
need for indirect methods of attack attribution. The types of
cybercrimes that authorship analysis has been applied to vary
wildly. Examples include webpage spam [33], [32]; malware
[9], [7]; pornography [19]; and online terrorism postings [1].
Authorship analysis has been applied to phishing attacks as
well [17], [18], presenting the basis that this research extends.
Phishing was first popularized in the mid 1990s and has
since been a hot topic of research, with many research papers
devoted to the problem and also conferences held, such as
the eCrime Researcher’s Summit which is held by the Anti-
Phishing Working Group. Much phishing research focuses on
classification of phishing messages and websites for detection
and blocking [20], [21], [3], [2]. Other work in phishing looks
at phishing from a crime perspective, aiming to understand
the motives of phishers [24] to understanding the organization
behind phishing attacks [23]. Recent research into phishing
has started to look at the authorship properties of phishing
attacks.
This research takes the existing body of knowledge about
authorship analysis and applies it to phishing to develop an
autonomous system capable of clustering phishing websites
by campaign. Previous work in phishing authorship was able
to cluster together groups of phishing attacks using an in-depth
analysis that was driven by expert knowledge [23]. To perform
a similar analysis on new data would take almost as long as
the original study, due to the investigative nature of the work.
This provides the motivation behind automating this task and
the justification for this requirement on this research.
In this research, a methodology is presented that is able
to automatically clusters phishing attacks into different cam-
paigns against the same target. The resulting clusters are eval-
uated using information not present during the training of the
system to determine the validity of the clusters. The aim of this
research is to provide an intermediary step between phishing
attacks, and automatic phishing authorship detection. This step
is the collection of phishing websites into ‘campaigns’ which
are similar phishing attacks by the same author. A campaign
should have a high precision, in that phishing attacks in the
same campaign should belong to the same author. This is
opposed to having a high recall, where all phishing attacks
by the same author are in the same group. Future work in
this area by the authors will focus on this final step, grouping
campaigns into authorship clusters with both a high precision
and high recall.
A. A Question of Authorship
The underground economy is a complex mix of suppliers
and customers of various parts of cybercrime attacks [30],
[24]. An attack needs a procedure, a distribution platform and
a method of obtaining the money. There are criminals who are
experts in each of these fields, for each of the various types of
cybercrimes. One element of a phishing attack that is integral
to this work is the phishing kit.
A phishing kits are ‘complete phishing websites contained
in a ready-to-deploy package’[5]. Due to the availability of
both sold and free phishing kits, it is quite possible that the
author of the phishing website is not the person responsible
for the phishing attack. For this research, we concern ourselves
with the author of the phishing attack which in many cases
would be the person who created the phishing kit, not the
person who used it. These phishing kit authors should still be
considered criminals, as they profit from crimes, assist crime
and are creating tools to deliberately subterfuge protection and
security systems. In many countries these are seen to be almost
as much of a crime as the original phishing attack. Further to
this point, if LEAs are able to prosecute the authors of these
phishing kits then the phishing ecosystem would break down
due to the unavailability of phishing websites.
B. The SCAP Methodology
The Source Code Authorship Profile (SCAP) methodology
is a methodology developed to determine authorship of com-
puter programs by their source code [8], [7]. It was developed
based on earlier work in the area of software authorship
attribution [16], [14], [11], [22]. The SCAP methodology is
a simplified form of another localized n-gram based method
[13] which has a more complex distance metric.
The SCAP methodology uses character level n-gram dis-
tributions to generate a profile for an author. To generate the
Simplified Profile (SP) for an author, all training documents for
that author are combined and the frequency of each character
level n-gram is counted. The L most frequently occurring n-
grams are then collected. These form the SP for that author
and this procedure is then repeated for all known authors. To
attribute a new document to a known author, the Simplified
Profile Intersection (SPI) is calculated between the document
and each author with the author with the highest SPI is given
as the author. To calculate the SPI between a document and
an author, the L most frequently occurring n-grams for the
document are collected and compared to the author’s SP. The
SPI is the size of the intersection of these two profiles, the
number of n-grams appearing in both lists of n-grams.
The SCAP methodology differs from the earlier work of
Keselj et. al [13] through the simplification of the distance
metric. In [13], the frequencies of each n-gram are needed
to calculate the Relative Distance (RD) between a document
and author. This makes the profiles more complex and the
distance metric also takes longer to compute. It was shown
that SPI performs either better than or comparably with RD
[8], giving weight to the use of SPI instead of RD for this
methodology.
C. Cluster Analysis and Validation
In cluster analysis, the dataset is grouped into subsets
such that instances within a subset are more similar to each
other then to instances in other subsets.under a wide range
of parameters Different clustering algorithms attempt this in
different ways and many try to find a way of clustering the data
to minimize a given evaluation metric. The k-means algorithm
[12] is perhaps the most famous clustering algorithm due to
its simplicity and speed. The k-means algorithm partitions the
dataset according to centroids, assigning each instance to its
nearest centroid.
Another type of clustering algorithm that has gained pop-
ularity in recent years are graph based clustering algorithms.
The FMC algorithm [6] is one of a series of graph based
methods which calculate the minimal spanning tree (MST)
of a graph and select a threshold value, where edges of the
MST with a weight greater than this threshold are cut. The
resulting graph will be a forest with each tree corresponding
to a different cluster, which performs the clustering of the
original dataset. It has been shown to find clusters in a variety
of different datasets and has also been shown to outperform
other method in generating effective clusters [6].
The FMC algorithm has a further benefit over other graph
based methods in that there are no parameters into the algo-
rithm [6]. All of the weights of the edges in the MST are taken
and clustered using the fuzzy c-means algorithm [4] searching
for two clusters. As the weights represent a one dimensional
dataset, there will be a ‘large’ cluster and a ‘small’ cluster.
These clusters are used to determine the threshold as any
weight in the ‘large’ cluster is cut in the original MST.
III. THE USCAP METHODOLOGY
The SCAP method relies on the training set of documents
for each author to generate the profile. In an unsupervised
learning environment such authorship classes do not exist,
creating a problem for applying SCAP to these problems.
To overcome this, we propose the USCAP methodology, for
Unsupervised SCAP, which extends the SCAP methodology
into unsupervised learning.
The USCAP methodology consists of three phases; the
similarity matrix generation stage, the clustering stage and
finally the ensembling stage. Firstly, the similarity between
documents is calculated in much the same way that the
SCAP method calculates similarity between and author and
a document. A variety of parameters, specifically the choice
of any preprocessing methods as well as the values for n
and L, require that this procedure is run many times for each
set of parameter values resulting in many similarity matrices.
Secondly, clusters are determined using the resulting similarity
matrices from the first phase. This generates a list of cluster
sets, where documents are clustered together in different ways
from the different parameter value sets. Finally the different
clusterings from the second stage are combined using an
ensembling method and the results clustered for a final time
to produce the final labels of the data. These three phases are
now described in detail in the following subsections.
A. Similarity Calculation Stage
The USCAP methodology begins by generating the n-
gram distribution for each document in the corpus for given
values of L and n. The key difference between the SCAP
and USCAP methodologies for this step of the procedure
is that the SCAP methodology calculates the overall n-gram
distribution for each author rather, where the USCAP method
calculates the n-gram distributions for each document. The n-
gram distribution for a document is calculated by counting the
frequency with which each n-gram appears in the document
and selecting the L most frequently occurring n-grams. This
forms the simplified profile for that document. Based on
previous research [7] we used n values between 2 and 9
inclusive and L values of 10, 50, 100, 200, 500, 1000, 1500,
2000, 3000 and None. A L value of None indicates that the list
of n-gram is not restricted in length, containing all n-grams
in each document.
The similarity between two documents is calculated using
the same method that is used in the SCAP methodology. The
similarity between two documents is the size of the inter-
section of the simplified profile for each author, normalized
by dividing by L, the maximum possible intersection size.
The resulting value is between 0 and 1, with 0 indicating
no similarity between the documents and values close to 1
indicating a high similarity between documents. The aim for
this similarity metric is that higher values indicate a higher
probability that two documents are authored by the same
person or group.
B. Clustering Stage
With the similarity matrices created as part of the first phase,
the USCAP methodology now generates a partitioning of these
documents using a clustering method. For this research we
use the Fuzzy c-means MST Clustering algorithm (FMC), as
described in section II-C. In this phase, the FMC algorithm is
run on each of the similarity matrices calculated in phase 1,
and the resulting clusters for each are saved to be ensembles
in the next phase.
C. Ensembling Stage
The result from phase 2 will be a large collection of different
clusterings of the original dataset. Ideally there would be no
difference between the clusterings from each phase 2 on each
of the similarity matrices from phase 1. In practice there will
be many small differences and also a few outlying clusterings
which differ substantially. To generate a final clustering of the
data the ensembling. This procedure is based on a previous
work [10] which used evidence accumulation which accumu-
lates evidence in a co-association matrix (defined below) and
clusters using this new matrix as a similarity measure using
hierarchical clustering. The approach in this paper is the same,
except that the procedure used here is based on the FMC
algorithm for clustering the co-association matrix.
The procedure begins by calculating the co-association
matrix C, where Cij is the percentage of phase 2 clusterings
in which document i and document j are clustered together.
This forms a similarity matrix, which is then clustered using
the FMC procedure outlined in subsection III-B.
The resulting phase 3 clustering is then evaluated using the
Normalized Mutual Information (NMI) score to measure the
stability of the clustering from phase 2. Mutual Information
is a measure comparing the amount of information shared
between two series, in this case clustering labels. A high NMI
score indicates a high stability in the phase 2 clustering and a
high correlation to the phase 3 clustering. A low NMI score
indicates that the phase 2 clustering had a lot of variation and
there is little correlation to the phase 3 clustering, indicating
that the methodology does not reliably determine authorship.
D. Evaluation
Evaluation of the results will occur in three stages. The first
is the evaluation of the cluster density using the silhouette
coefficient. The second is the verification using the single
URL assumption described below. Finally, the clusters will be
evaluated through their attacks over time. Each of these three
stages will be described below.
The silhouette coefficient is a measure of cluster density
and separation [28]. A high silhouette coefficient correlates to
dense clusters that are well separated, while a low silhouette
coefficient indicates highly overlapping clusters. The silhouette
coefficient for an instance i is composed of two terms. The
first is the mean intra-cluster distance, ai, which is the mean
distance to each other point in the same cluster as instance i.
The second is the mean inter-cluster distance, bi, which is the
mean distance to each other point in the nearest cluster. The
silhouette coefficient for point i is given as si = bi−aimax(ai,bi) .
The silhouette coefficient is also given for each cluster, as
the mean of the silhouette coefficient of each point in that
cluster. Finally, the overall silhouette coefficient is the mean
of the silhouette coefficient for all points in the dataset. To
evaluate a model through the silhouette coefficient, the overall
value is given as well as evaluating each cluster. In some
models there are well defined clusters along with overlapping
clusters, in which case the cluster’s silhouette coefficient will
The second form of evaluation uses the assumption that
each URL associated with a phishing website should belong
to a single group or campaign. In the dataset described in
subsection I-B, the URL that each content was hosted on was
collected and recorded along with the phishing website con-
tent. Using this data along with our assumption, the accuracy
of a model can be determined by determining the number of
times two phishing webpage contents share the same URL.
Ideally, two contents should be clustered together each time
two contents share the same URL.
Finally, the third form of evaluation is an analysis of the
nature of the attacks per cluster over time. It could be expected
that attacks from different clusters have little to no relationship
to each other temporally. An exploratory analysis is performed
on the resulting clusters using their temporal time patterns.
The analysis will consider the euclidean distance between the
attacks per week from each cluster. The vectors will each be
normalized by clusters, with the week of the most attacks
by a given cluster given a value of 1.0 and each other week
having a linear proportion of that amount. Clusters with a very
low distance through this method are likely to have similar
authorship, as their attack patterns match closely based on
time.
IV. RESULTS
Applying the USCAP methodology to the dataset resulted
in 19 clusters of authorship being discovered. The cluster sizes
and labels are given in Table I. From these results, we can see
# Size S
0 338 0.86
1 11 0.86
2 20 0.95
3 154 0.97
4 9 0.91
5 8 0.93
6 18 0.88
7 8 0.86
8 15 0.90
9 22 0.87
10 6 0.91
11 7 0.91
12 25 0.90
13 24 0.92
14 6 0.85
15 7 0.81
16 6 0.89
17 8 0.89
18 6 0.87
19 6 0.77
All 696 0.89
TABLE I
CLUSTER SIZES ALONG WITH THEIR SILHOUETTE COEFFICIENT (S).
that there are two major clusters; clusters 0 and 3. Following
these, there are four more clusters at or above 20 members;
clusters 2, 9, 12 and 13. There are three more with membership
above 10 members; clusters 1, 6 and 8. Finally, the other 11
clusters had between 6 and 9 members each. In our results,
we considered any ‘cluster’ 5 or fewer members to be noise,
of which there were 78 instances.
Most of the clusters shown in Table I are well defined,
with only one cluster having a silhouette coefficient of less
than 0.80 and most being above 0.85. This indicates that the
distance matrix produces dense, well separated clusters. This
can be further shown in Figure 1, which shows clusters defined
by dark blue blocks along the bottom left to top right diagonal.
Values in each of the blocks on the diagonal are the distance
between webpages in the same cluster and should tend to be
dark blue. Values off the diagonal are the distances between
webpages from different clusters and should tend to be more
red in color. Figure 1 shows a strong tendency towards red
off the diagonal, with only a few clusters indicating a lower
cross-cluster distance.
Overall, the mean NMI between each of the individual
clusterings and the final ensemble was 0.7685 with a standard
deviation of 0.0346. This corresponds to an average 85.9%
of all decisions being the same between the clusterings and
final ensemble. The two decisions that are being made are
for each i and j, that webpages i and j should, or should
not, be clustered together. Overall, 85.9% indicates a strong
correlation, despite the variance in the individual clusterings.
In performing the site based validation, an accuracy of
90.23% is achieved, 240 out of 266 decisions agree with the
single URL assumption (Subsection III-D). Of the 26 errors,
there were 20 different URLs and 7 clusters affected. Twelve
of the URLs from cluster 8 have been also labeled in cluster
9 or vice versa, indicating that these two clusters are strongly
related. The rest of the errors are single occurrences, unlikely
to represent an overlapping of two clusters.
The attacks from each cluster are shown over time in Figure
21. This figure shows each cluster along the y axis and time
along the x axis. Darker reds indicate more attacks in that
period of time, while lighter reds indicate fewer attacks. Each
cluster’s attack numbers have been normalized, where a dark
red value of 1.0 indicates the time period which contained
the most attacks from that cluster. Evaluation of this figure
indicates that some of the clusters may be related. Clusters 8
and 9 have a nearly identical pattern in the same time period,
indicating that they could be related. Combined with the URL
based evaluation, which saw 12 of the 20 errors occurring as
a mis-match between these clusters, there is strong evidence
for this link. A similar example of this is between clusters 17
and 18, including possibly cluster 15.
Of the 20 clusters, there just 8 pairs of clusters with a
euclidean distance of less than or equal to 1.0. Clusters 8
and 9 had a distance of 0.0, with cluster 7 having a distance
of 0.3 from each of these. Clusters 17 and 18 had a distance
of 0.0 from each other and a distance of 0.2 from cluster 15
each. Cluster 16 had a distance of 1.0 to cluster 15 (however,
a distance of 1.1 from clusters 17 and 18). Finally, clusters
3 and 5 had a distance of 0.4 from each other. This strongly
correlates with what is visually available in Figure 2.
V. CONCLUSIONS
In this paper, a methodology for the unsupervised and
automated clustering of phishing websites into campaigns
was presented. The USCAP methodology extends a previous
methodology to become unsupervised and applicable for cy-
bercrime settings where labeled datasets are often hard to come
across. The phishing websites are first clustered using the
Local n-grams method with a variety of parameters. After this,
a similarity matrix is created composed of the co-association
between websites within each of these initial clusterings.
Finally, the final clusters to be achieved using the FMC
algorithm on the similarity matrix. The resulting clustering was
highly distinctive, with an overall silhouette coefficient of 0.89,
and also highly correlated to each of the initial clusterings,
with an overall NMI of 0.7685 corresponding to approximately
85.9% of decisions in agreement.
From the USCAP results, the size and scope of different
phishing campaigns is reported on. It was found that one
campaign found accounts for 43.22% of all phishing attacks,
while another campaign accounts for 19.69% of attacks in our
sample. There were 7 groups with medium sized campaigns,
between 10 and 30 attacks in our sample each. There were 78
attacks, 9.97%, that were not assigned a category and a further
77 attacks, 9.85%, that were assigned to ‘small’ campaigns.
Evaluation of the clusters indicates that there are some
campaigns that are likely to be related. An example of this
is clusters 8 and 9 which are the most common clusters for
1The time axes on figure 2 is unlabeled, on request by the owners of the
data. No alteration to the time axes has been made and it remains a linear
scale.
Fig. 1. Matrix visualization of the phishing websites, reordered to group clusters together along each axis. Color is the distance between the two websites.
URL based validation errors and have an almost identical
similar time-attack pattern. This indicates that the clusters
discovered are indicative of different campaigns from the same
author. These campaigns could be linked in further research
to become clusters based on complete authorship, where all
attacks in a single cluster are by a single author and all attacks
by a single author are in one cluster. It is possible through
future investigations, that more information about these attacks
can be discovered, leading to a more complete picture of the
overall phishing structure.
The extensions to this work involve collecting campaigns
into clusters of authorship as noted above and also applying
this technique to other types of cybercrime. Cybercrime is a
prime candidate for unsupervised authorship analysis work,
as labeled datasets are often not available. Further to this,
many cybercriminals hide behind the anonymity of the In-
ternet, making it difficult to directly attribute attacks, while
authorship analysis could instead attribute indirectly through
methodologies such as USCAP.
VI. ACKNOWLEDGMENTS
This research was funded by the State Government of
Victoria, IBM, Westpac, the Australian Federal Police and the
University of Ballarat.
REFERENCES
[1] A. Abbasi and H. Chen. Applying authorship analysis to extremist-group
web forum messages. IEEE Intelligent Systems, 20(5):67–75, 2005.
[2] S. Abu-Nimeh, D. Nappa, X. Wang, and S. Nair. A comparison of
machine learning techniques for phishing detection. In eCrime ’07:
Proceedings of the Anti-Phishing Working Group’s 2nd annual eCrime
Researchers Summit, pages 60–69, New York, NY, USA, 2007. ACM.
[3] R. Basnet, S. Mukkamala, and A. H. Sung. Detection of phishing attacks:
A machine learning approach. Soft Computing Applications in Industry,
2008.
Fig. 2. Visualization of each cluster’s attacks over time. Darker reds indicate more attacks, and each cluster’s row has been normalized for attacks only from
that cluster.
[4] J. Bezdek, J. Keller, R. Krisnapuram, and N. Pal. Fuzzy models
and algorithms for pattern recognition and image processing. Kluwer
Academic Publishers, 1999.
[5] M. Cova, C. Kruegel, and G. Vigna. There is no free phish: An analysis
of “free” and live phishing kits. 2nd USENIX Workshop on Offensive
TEchnologies, 1:1, 2008.
[6] P. Foggia, G. Percannella, C. Sansone, and M. Vento. A graph-based
clustering method and its applications. Advances in Brain, Vision, and
Artificial Intelligence, pages 277–287, 2007.
[7] G. Frantzeskou, E. Stamatatos, S. Gritzalis, and C. E. Chaski. Identifying
authorship by byte-level n-grams: The source code author profile (scap)
method. Int. Journal of Digital Evidence, 6(1), 2007.
[8] G. Frantzeskou, E. Stamatatos, S. Gritzalis, and S. Katsikas. Effective
identification of source code authors using byte-level information. In
ICSE ’06: Proceedings of the 28th international conference on Software
engineering, pages 893–896, New York, NY, USA, 2006. ACM.
[9] G. Frantzeskou, E. Stamatatos, S. Gritzalis, and S. Katsikas. Source
code author identification based on n-gram author profiles. Artificial
Intelligence Applications and Innovations, Volume 204/2006:508–515,
2006.
[10] A. L. N. Fred and A. K. Jain. Robust data clustering. Computer Vision
and Pattern Recognition, IEEE Computer Society Conference on, 2:128,
2003.
[11] A. Gray, P. Sallis, and S. MacDonell. IDENTIFIED (Integrated
Dictionary-based Extraction ofNon-language-dependent Token Informa-
tion for Forensic Identification, Examination, and Discrimination): a
dictionary-based system forextracting source code metrics for software
forensics. pages 252–259, 1998.
[12] J. A. Hartigan and M. A. Wong. A K-means clustering algorithm.
Applied Statistics, 28:100–108, 1979.
[13] V. Keselj, F. Peng, N. Cercone, and C. Thomas. N-gram-based author
profiles for authorship attribution. In Proc. Pacific Association for
Computational Linguistics, 2003.
[14] R. Kilgour, A. Gray, P. Sallis, and S. MacDonell. A fuzzy logic approach
to computer software source code authorship analysis. International
Conference on Neural Information Processing and Intelligent Informa-
tion Systems, pages 865–868, 1997.
[15] Y.-G. Kim, S. Cho, J.-S. Lee, M.-S. Lee, I. Kim, and S. Kim. Method
for evaluating the security risk of a website against phishing attacks.
Intelligence and Security Informatics, 5075:2131, 2008.
[16] I. Krsul and E. H. Spafford. Authorship analysis: Identifying the author
of a program. Computers & Security, 16(3):233–257, 1997.
[17] R. Layton, S. Brown, and P. Watters. Using differencing to increase
distinctiveness for phishing website clustering. Proceedings of the Sym-
posia and Workshops on Ubiquitous, Autonomic and Trusted Computing,
July 2009.
[18] R. Layton and P. Watters. Determining provenance in phishing websites
using automated conceptual analysis. In eCrime Researchers Summit
2009, Tacoma, WA, USA, 10 2009.
[19] J. Ma, G. Teng, Y. Zhang, Y. Li, and Y. Li. A cybercrime forensic
method for chinese web information authorship analysis. Intelligence
and Security Informatics, pages 14–24, 2009.
[20] L. Ma, B. Ofoghi, P. Watters, and S. Brown. Detecting phishing emails
using hybrid features. Ubiquitous, Autonomic and Trusted Computing,
Symposia and Workshops on, 0:493–497, 2009.
[21] L. Ma, R. Torney, P. Watters, and S. Brown. Automatically generating
classifier for phishing email prediction. Parallel Architectures, Algo-
rithms, and Networks, International Symposium on, 0:779–783, 2009.
[22] S. MacDonell, A. Gray, G. MacLennan, and P. Sallis. Software forensics
for discriminating between program authors using case-based reasoning,
feed forward neural networks and multiple discriminant analysis. 1,
1999.
[23] S. McCombie, P. Watters, A. Ng, and B. Watson. Forensic characteristics
of phishing - petty theft or organized crime? In J. Cordeiro, J. Filipe,
and S. Hammoudi, editors, WEBIST (1), pages 149–157. INSTICC Press,
2008.
[24] D. K. McGrath and M. Gupta. Behind phishing: an examination of
phisher modi operandi. In LEET’08: Proceedings of the 1st Usenix
Workshop on Large-Scale Exploits and Emergent Threats, pages 1–8,
Berkeley, CA, USA, 2008. USENIX Association.
[25] T. Moore and R. Clayton. Examining the impact of website take-down
on phishing. In eCrime ’07: Proceedings of the anti-phishing working
groups 2nd annual eCrime researchers summit, pages 1–13, New York,
NY, USA, 2007. ACM.
[26] F. Mosteller and D. L. Wallace. Inference in an authorship problem.
Journal of the American Statistical Association, 58(302):275–309, 1963.
[27] P. Oman and C. Cook. Programming style authorship analysis. In
Proceedings of the 17th conference on ACM Annual Computer Science
Conference, pages 320–326. ACM New York, NY, USA, 1989.
[28] P. Rousseeuw. Silhouettes: a graphical aid to the interpretation and
validation of cluster analysis. Journal of computational and applied
mathematics, 20(1):53–65, 1987.
[29] E. Stamatatos. A survey of modern authorship attribution methods. Jour-
nal of the American Society for Information Science and Technology,
60(3), 2009.
[30] R. Thomas and J. Martin. The underground economy: priceless. The
USENIX Magazine, December, 00:2006–12, 2006.
[31] J. Toolan, F. Carthy. Phishing detection using classifier ensembles. pages
1–9, 2009.
[32] T. Urvoy, E. Chauveau, P. Filoche, and T. Lavergne. Tracking web spam
with html style similarities. ACM Trans. Web, 2(1):1–28, 2008.
[33] T. Urvoy, T. Lavergne, and P. Filoche. Tracking web spam with hidden
style similarity. AIRWeb 2006 Program, 29:25, 2006.
[34] R. Zheng, J. Li, H. Chen, and Z. Huang. A framework for authorship
identification of online messages: Writing-style features and classifica-
tion techniques. Journal of the American Society for Information Science
and Technology, 57(3):378–393, 2005.
