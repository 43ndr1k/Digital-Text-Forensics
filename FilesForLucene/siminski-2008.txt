Sentence Boundary Verification in Polish Text
Krzysztof Simiński
Institute of Informatics, Silesian University of Technolog
Krzysztof.Siminski@polsl.pl
Summary. In this paper the heuristic metod based on phrase analysis is proposed
for sentence boundary verification in Polish texts. The decision rules, maximum en-
tropy and neural network as reference methods are compared with the phrase analysis.
The results elaborated by the proposed method are more acurate than the reference
methods.
1 Introduction
The sentence boundary problem splits into two tasks. The first one is the sentence
boundary detection in texts with no punctuation marks and no upper and lower
case discrimination. The latter one is the sentence boundary verification in texts
with punctuation marks and preserved letter cases.
This paper deals with the verification of sentence boundaries in Polish texts.
The problem of proper sentence boundary verification is crucial in natural
language processing. The analysis is mostly based on the sentences. The danger
of the vicious circle can appear: for proper analysis the text should be split into
sentences, but the analysis should be carried out to split the text into sentences.
Polish is an inflecting language and thanks to this many steps of analysis can be
based on the morphological forms of words.
The sentence is not easy to define. There are more than two hundred defini-
tions of sentence. The most popular belong to one of three groups:
1. The formal definition. Sentence is a text fragment that start with capitalised
word and ends with the full stop (or other punctuation mark that denotes
the end of sentence).
2. The quantum of information. The sentence is a text fragment containing the
separate autonomous quantum of information.
3. The linguistic definition. The sentence is a set of words joined by predicative
syntactic determinance [10].
The problem arises as the punctuation marks (mainly the full stop) have many
functions. In Polish the full stop denotes the end of sentence, the abbreviation,
the ordinal numeral, thousands separator in numerals (cf. table 1).
The additional problem that complicates the task of sentence boundary veri-
fication is the haplography. It occurs when the letter or sign is written only once
when it should be written twice. The full stop being the element of the phrase
M. Kurzynski et al. (Eds.): Computer Recognition Systems 2, ASC 45, pp. 493–499, 2007.
springerlink.com c© Springer-Verlag Berlin Heidelberg 2007
494 K. Simiński
Table 1. The multiple function of full stop in Polish
function Polish example English translation
end of sentence To jest dom. This is a house.
abbreviation prof. Nowak prof. Nowak
omission Widział (. . . ) psa. He saw (. . . ) a dog.
ordinal numeral w 5. domu in the 5th house
thousand separator 1.234,56 1,234.56
at the end of the sentence merges with the full stop denoting the end of sentence
into singular punctuation mark, eg. Wiem, co powiedział pan A. ‘I know what
Mr A. said.’ The other punctuation marks do not manifest the haplography
phenomenon, eg. Co powiedział pan A.? ‘What did Mr A. say?’
2 Methods
There are very few papers on verification of sentence boundaries in Polish text.
The methods used in other languages can be grouped into the direct analysis,
the analysis of characters, the analysis of features.
2.1 The Direct Analysis
The direct model is based on implementation of situations when the full stop
does not denote the end of sentence, eg. the full stop before the subsequent
question mark does not separate the sentences.
This method implies the strict collaboration of computer and lingustic special-
ists. The satisfactory results can be achieved with this method. The new cases
need the interference in the programme code, so the maintainance is expensive
and prone to errors [11].
2.2 The Analysis of Characters
The regular expression are used to find cases when the full stop does not denote
the sentence boundary. The common cases are the WWW addresses, dates in
yyyy.mm.dd format or numbers [1, 11].
2.3 The Analysis of Features
Most common method for the sentence boundary verification is the analysis of
features. For a lexem that can denote the end of sentence (ie. ‘.’, ‘?’, ‘ !’) the
features of this lexem, the preceding and following lexems can be extracted.
On these features the attempts are conducted to determine the function of the
full stop, question mark or exclamation mark (whether they denote the end of
sentence or not).
Sentence Boundary Verification in Polish Text 495
The lexems the features are extracted from constitute the feature window
(called also a context). Most commonly the window is symmetrical and contains
a few lexems before the punctuation mark in question and a few after (3-element
[3, 11], 5-element [4], 7-element [8, 4], 9-element window [4]).
The decision d whether the full stop ends the sentence is an element of the set
D = {end, no end}. The values of features (the attributes) a in a window build
up the feature vector A = {a1, a2, . . . , an}. All vectors are gathered in the set
A = {A1,A2, . . . ,Am}. From the training texts all pairs 〈A, d〉 are extracted.
In the test texts for each vector A the decision d about the function of the
punctuation mark is unknown and should be determined.
From the training texts the features are extracted for each occurrence of full
stop, question mark and exclamation mark. The extracted features vary in pa-
pers, the most common are: the length of lexem, the part of speech it represents,
whether the lexem represents the numerical value, whether it is a punctuation
mark (full stop, question mark, exclamation mark, quote, colon, semicolon, . . . ),
whether it is uppercase, whether it is a abbreviation, whether the lexem is hon-
orific (eg. Mr., Dr,. Gen.) [3, 11, 7].
The function of the full stop, question mark or exclamation mark in the sen-
tence is predicted by means of decision trees [4], decision rules [8], hidden Markov
models [12], maximum entropy [6] and artificial neural networks [4].
3 Our Approach
One can ask whether verification of the sentence boundaries can be simplified by
using more intuitive methods based on the linguistic approach. In some phrases
the full stop is an element of phrase and does not denote the end of sentence.
It is advantageous to detect the phrases where the full stop is an element of the
phrase. Some phrases never occur at the end of the sentence, eg.: prof. ‘prof.’,
np. ‘eg.’, św. ‘holy’. So the full stop in these phrases is never the indication of
the sentence boundary.
There are phrases with the full stop that may occur in the sentence or at the
end of the sentence, eg.: itd. ‘etc’, p. n. e. ‘BC’. In order to determine whether
the phrase ends the sentence or not the following heuristic algorithm has been
proposed.
The assumptions of the algorithm are following (1) the sentence is a simple
one (has one verb) and (2) each phrase has the end weight we ∈ [0, 100]. End
weight represents the probability that the phrase ends the sentence. The phrases
that never end the sentence have we = 0 and those that always end the clause
have we = 100.
The figure 1 depicts the algorithm. First the certain sentence boundaries are
found (marked in the figure 1 with letter E). These are the situations when with-
out doubt the punctuation marks denote the ends of sentences. The remaining
phrases have we < 100 and should be carefully treated. All the phrases with
we < 100 that appear between the certain sentence boundary E and the verb
V do not denote the sentence boundary with no regard to their end weights
496 K. Simiński
(if the phrases denoted the sentence boundaries some sentences would have no
verb). From the phrases between verbs the one with the maximum end weight
is selected to denote the sentence boundary. In the figure 1 the phrase P1 is
not a sentence boundary because it is between certain sentence boundary and
the verb. From the phrases P2 and P3 between two verbs the phrase P3 has
maximum end weight we = 50 and denotes the sentence boundary.
Fig. 1. The symbolic excerpt of the text with phrases and verbs. E – certain end of
sentence, P – phrase, V – verb. Numbers below the phrases are the their end weights
we. The phrase P1 does not denote the sentence boundary because it is between the
certain end of previous sentence and the verb. From the phrases P2 and P3 (that are
between verbs) the phrase with maximum end weight is selected. In this figure only
the phrase P3 represents the end of the sentence.
4 Experiments
The are very few papers on the sentence boundaries verification in Polish texts.
In order to compare the results elaborated by the analysis of phrases methods
used in other languages have been used as the reference methods. The decision
rules, maximum entropy and neural network have been applied to determine the
baseline for the research.
The analysis has been conducted on 128 Polish newspaper texts (containing
114 635 words). The newspaper texts have been used because their contain more
situations of sentence boundaries than the belles-lettres. The set of texts has been
split into traning and test sets. The advanced morphological analysis by means
of LAS (Advanced Linguistic Server developed in the Institute of Informatics
at the Silesian University of Technology [9, 2]) has been applied to these texts.
From 44 training texts the 2198 tuples of features have been extracted. The
window for feature extraction has comprised 5, 7 or 9 elements. The feature for
the punctuation mark in question is enumerative: whether it is ‘.’, ‘?’ or ‘ !’. The
extracted features for the remaining lexems in the window are following: the
length, is capitalised?, is a numeral?, is a Roman numeral?, is known word?, is
a punctuation mark?
The decision tree and subsequently the rules has been induced with C4.5
algorithm [5].
Sentence Boundary Verification in Polish Text 497
The network used in the system was the tree layer network with one input
neuron for each feature and one output neuron. The activation function for all
the neurons was the sigmoid function. The weights of the neurons were adjusted
by means of back propagation.
5 Results
The results are presented in the table 2. The situation is a full stop, exclamation
mark or question mark. The correctness measure p is defined as
p =
well predicted situations
all situations
The reference correctness pr is the correctness when all situations are regarded
as the ends of sentences. The reference correctness in test texts is pr = 81.2%.
The table 2 presents the average correctness for test texts elaborated with
different methods and window width. The results for the most effective window
in each reference method are shown in the table.
Table 2. The best results of sentence boundary verification
method correctness [%] window width
rules 95.1 5, 9
maxent 93.9 9
neural network 94.8 5
phrases 97.1 –
reference correctness 81.2
The table 3 shows the comparision with sentence boundary verification in
other languages.
Table 3. The comparision with other languages (en – English, fr - French, ge – German,
gr – Greek)
method correctness [%]
language Polish other
rules 95.1 76.9 (en), 97.7 – 99.3 (ge), [12, 4]
99.4 (fr, gr) [4, 8]
maxent 93.4 97.6 (en), 97.9 – 98.8 (en) [12, 7]
neural network 94.8 98.7 (ge), 99.4 (fr) [4]
hidden Markov model 94.5 (en) [12]
phrases 97.1
498 K. Simiński
The experiments with large window reveal that for the best result the window
should comprise only a few elements [4].
5.1 Problems
The method has not 100% correctness. The analysis of errors shows the sources
of uncorrect sentence boundary denotation:
1. the internet addresses: www.polsl.pl ;
2. dates: 2007.05.16 ;
3. the ambiguity of phrases – the phrase is both an abbreviation and a valid
word, eg.: ul. – abbreviation of word ulica ‘street’ but ul is also a valid word
(‘hive’): Na ul. Miodowej stoi ul. ‘In the Honey Street [there] is a hive.’;
4. the ambiguity of morphological forms – the form of a verb (that is crucial in
phrase analysis) is the same as the form of another part of speech, eg. pchła
– ‘a flea’, pchła – ‘[she] pushed’;
5. the compound and complex sentences – the assumption of the method is that
each sentence has one verb (is a simple sentence), so the method does not
always (but surprisingly often) treat the compound and complex sentences
properly;
6. foreign word phrases.
6 Conclusions
The phrase analysis in sentence boundary verification in Polish text is better
than reference methods of features analysis. The phrase analysis is simple and
fast (especially when compared with the learning procedures of neural network).
The method does not require the voluminous phrase list (147 phrases).
The phrase analysis is vulnerable to unknown and foreign language phrases.
The method is not always satisfactorily effective with compound sentences.
The method offers sufficiently accurate sentence boundary verification for Pol-
ish text basing only on the morphological analysis. The improvement requires
syntactic analysis (compound and complex sentences, disambiguation of mor-
phological forms).
References
1. Krzysztof Jassem. Przetwarzanie tekstów polskich w systemie tłumaczenia au-
tomatycznego POLENG. Wydawnictwo Naukowe UAM, 2006.
2. Sławomir Kulików. Implementacja serwera analizy lingwistycznej dla systemu
THETOS – translatora tekstu na język migowy. Studia Informatica, 24(3
(55)):171–178, 2003.
3. Kelley Herndon Ford Neha Agarwal and Max Shneider. Sentence boundary detec-
tion using a maxent classifier.
4. David D. Palmer and Marti A. Hearst. Adaptive multilingual sentence boundary
disambiguation. Computational Linguistics, 23(2):241–267, 1997.
Sentence Boundary Verification in Polish Text 499
5. Ross Quinlan. C4.5: Programs for Machine Learning. Morgan Kaufmann Publish-
ers, 1993.
6. Adwait Ratnaparkhi. A simple introduction to maximum entropy models for nat-
ural language processing. Technical report, Institute for Research in Cognitive
Science, University of Pennsylvania, 1997.
7. Jeffrey C. Reynar and Adwait Ratnaparkhi. A maximum entropy approach to
identifying sentence boundaries. Proceedings of the Fifth Conference on Applied
Natural Language Processing, pages 16–19.
8. E. Stamatatos, N. Fakotakis, and G. Kokkinakis. Automatic extraction of rules
for sentence boundary disambiguation. Proceedings of the Workshop in Machine
Learning in Human Language Technology, Advance Course on Artificial Intelli-
gence, pages 88–92, 1999.
9. Nina Suszczańska, Mirosław Forczek, and Artur Migas. Wieloetapowy analizator
morfologiczny. Speech and Language Technology, 4:155–165, 2000.
10. Stanisław Urbańczyk, editor. Encyklopedia jezyka polskiego. Zakład Narodowy im.
Ossolińskich – Wydawnictwo, 1991.
11. Daniel J. Walker, David E. Clements, Maki Darwin, and Jan W. Amtrup. Sentence
boundary detection: A comparison of paradigms for improving MT quality. In MT
Summit Proceedings VIII, September 2001.
12. Haoyi Wang and Yang Huang. Bondex – a sentence boundary detector, 2003.
